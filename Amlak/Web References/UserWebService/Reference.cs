//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Amlak.UserWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UsersSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseBL))]
    public partial class Users : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUserCredit2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserBasePriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserIsExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserWithMobileNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserWithMobileNumber2OperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserWithLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserCreditBySeccondPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserWalletOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserWalletTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeductUserCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeUserCredit2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserNumbersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExpireDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEnExpireDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProvincesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForgotPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserWithUserNameAndPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback RevivalUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserCreditBySecondPassOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Users() {
            this.Url = global::Amlak.Properties.Settings.Default.Amlak_UserWebService_Users;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUserCredit2CompletedEventHandler GetUserCredit2Completed;
        
        /// <remarks/>
        public event GetUserBasePriceCompletedEventHandler GetUserBasePriceCompleted;
        
        /// <remarks/>
        public event GetUserIsExistCompletedEventHandler GetUserIsExistCompleted;
        
        /// <remarks/>
        public event AddUserWithMobileNumberCompletedEventHandler AddUserWithMobileNumberCompleted;
        
        /// <remarks/>
        public event AddUserWithMobileNumber2CompletedEventHandler AddUserWithMobileNumber2Completed;
        
        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;
        
        /// <remarks/>
        public event AddUserWithLocationCompletedEventHandler AddUserWithLocationCompleted;
        
        /// <remarks/>
        public event AddUserCompleteCompletedEventHandler AddUserCompleteCompleted;
        
        /// <remarks/>
        public event ChangeUserCreditBySeccondPassCompletedEventHandler ChangeUserCreditBySeccondPassCompleted;
        
        /// <remarks/>
        public event ChangeUserCreditCompletedEventHandler ChangeUserCreditCompleted;
        
        /// <remarks/>
        public event GetUserWalletCompletedEventHandler GetUserWalletCompleted;
        
        /// <remarks/>
        public event GetUserWalletTransactionCompletedEventHandler GetUserWalletTransactionCompleted;
        
        /// <remarks/>
        public event DeductUserCreditCompletedEventHandler DeductUserCreditCompleted;
        
        /// <remarks/>
        public event ChangeUserCredit2CompletedEventHandler ChangeUserCredit2Completed;
        
        /// <remarks/>
        public event GetUserTransactionsCompletedEventHandler GetUserTransactionsCompleted;
        
        /// <remarks/>
        public event GetUserDetailsCompletedEventHandler GetUserDetailsCompleted;
        
        /// <remarks/>
        public event GetUserCreditCompletedEventHandler GetUserCreditCompleted;
        
        /// <remarks/>
        public event RemoveUserCompletedEventHandler RemoveUserCompleted;
        
        /// <remarks/>
        public event GetUserNumbersCompletedEventHandler GetUserNumbersCompleted;
        
        /// <remarks/>
        public event AddPaymentCompletedEventHandler AddPaymentCompleted;
        
        /// <remarks/>
        public event HasFilterCompletedEventHandler HasFilterCompleted;
        
        /// <remarks/>
        public event GetUsersCompletedEventHandler GetUsersCompleted;
        
        /// <remarks/>
        public event AuthenticateUserCompletedEventHandler AuthenticateUserCompleted;
        
        /// <remarks/>
        public event GetExpireDateCompletedEventHandler GetExpireDateCompleted;
        
        /// <remarks/>
        public event GetEnExpireDateCompletedEventHandler GetEnExpireDateCompleted;
        
        /// <remarks/>
        public event GetProvincesCompletedEventHandler GetProvincesCompleted;
        
        /// <remarks/>
        public event GetCitiesCompletedEventHandler GetCitiesCompleted;
        
        /// <remarks/>
        public event ForgotPasswordCompletedEventHandler ForgotPasswordCompleted;
        
        /// <remarks/>
        public event AddUserWithUserNameAndPassCompletedEventHandler AddUserWithUserNameAndPassCompleted;
        
        /// <remarks/>
        public event RevivalUserCompletedEventHandler RevivalUserCompleted;
        
        /// <remarks/>
        public event GetUserByUserIDCompletedEventHandler GetUserByUserIDCompleted;
        
        /// <remarks/>
        public event GetUserCreditBySecondPassCompletedEventHandler GetUserCreditBySecondPassCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserCredit2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetUserCredit2(string username, string password) {
            object[] results = this.Invoke("GetUserCredit2", new object[] {
                        username,
                        password});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserCredit2Async(string username, string password) {
            this.GetUserCredit2Async(username, password, null);
        }
        
        /// <remarks/>
        public void GetUserCredit2Async(string username, string password, object userState) {
            if ((this.GetUserCredit2OperationCompleted == null)) {
                this.GetUserCredit2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserCredit2OperationCompleted);
            }
            this.InvokeAsync("GetUserCredit2", new object[] {
                        username,
                        password}, this.GetUserCredit2OperationCompleted, userState);
        }
        
        private void OnGetUserCredit2OperationCompleted(object arg) {
            if ((this.GetUserCredit2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCredit2Completed(this, new GetUserCredit2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserBasePrice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetUserBasePrice(string username, string password, string targetUsername) {
            object[] results = this.Invoke("GetUserBasePrice", new object[] {
                        username,
                        password,
                        targetUsername});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserBasePriceAsync(string username, string password, string targetUsername) {
            this.GetUserBasePriceAsync(username, password, targetUsername, null);
        }
        
        /// <remarks/>
        public void GetUserBasePriceAsync(string username, string password, string targetUsername, object userState) {
            if ((this.GetUserBasePriceOperationCompleted == null)) {
                this.GetUserBasePriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserBasePriceOperationCompleted);
            }
            this.InvokeAsync("GetUserBasePrice", new object[] {
                        username,
                        password,
                        targetUsername}, this.GetUserBasePriceOperationCompleted, userState);
        }
        
        private void OnGetUserBasePriceOperationCompleted(object arg) {
            if ((this.GetUserBasePriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserBasePriceCompleted(this, new GetUserBasePriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserIsExist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetUserIsExist(string username, string password, string targetUsername) {
            object[] results = this.Invoke("GetUserIsExist", new object[] {
                        username,
                        password,
                        targetUsername});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserIsExistAsync(string username, string password, string targetUsername) {
            this.GetUserIsExistAsync(username, password, targetUsername, null);
        }
        
        /// <remarks/>
        public void GetUserIsExistAsync(string username, string password, string targetUsername, object userState) {
            if ((this.GetUserIsExistOperationCompleted == null)) {
                this.GetUserIsExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserIsExistOperationCompleted);
            }
            this.InvokeAsync("GetUserIsExist", new object[] {
                        username,
                        password,
                        targetUsername}, this.GetUserIsExistOperationCompleted, userState);
        }
        
        private void OnGetUserIsExistOperationCompleted(object arg) {
            if ((this.GetUserIsExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserIsExistCompleted(this, new GetUserIsExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserWithMobileNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddUserWithMobileNumber(string username, string password, int productId, string mobileNumber, string firstName, string lastName, string email) {
            object[] results = this.Invoke("AddUserWithMobileNumber", new object[] {
                        username,
                        password,
                        productId,
                        mobileNumber,
                        firstName,
                        lastName,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserWithMobileNumberAsync(string username, string password, int productId, string mobileNumber, string firstName, string lastName, string email) {
            this.AddUserWithMobileNumberAsync(username, password, productId, mobileNumber, firstName, lastName, email, null);
        }
        
        /// <remarks/>
        public void AddUserWithMobileNumberAsync(string username, string password, int productId, string mobileNumber, string firstName, string lastName, string email, object userState) {
            if ((this.AddUserWithMobileNumberOperationCompleted == null)) {
                this.AddUserWithMobileNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserWithMobileNumberOperationCompleted);
            }
            this.InvokeAsync("AddUserWithMobileNumber", new object[] {
                        username,
                        password,
                        productId,
                        mobileNumber,
                        firstName,
                        lastName,
                        email}, this.AddUserWithMobileNumberOperationCompleted, userState);
        }
        
        private void OnAddUserWithMobileNumberOperationCompleted(object arg) {
            if ((this.AddUserWithMobileNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserWithMobileNumberCompleted(this, new AddUserWithMobileNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserWithMobileNumber2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddUserWithMobileNumber2(string username, string password, int productId, string mobileNumber, string firstName, string lastName, [System.Xml.Serialization.XmlElementAttribute("userName")] string userName1, string email) {
            object[] results = this.Invoke("AddUserWithMobileNumber2", new object[] {
                        username,
                        password,
                        productId,
                        mobileNumber,
                        firstName,
                        lastName,
                        userName1,
                        email});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserWithMobileNumber2Async(string username, string password, int productId, string mobileNumber, string firstName, string lastName, string userName1, string email) {
            this.AddUserWithMobileNumber2Async(username, password, productId, mobileNumber, firstName, lastName, userName1, email, null);
        }
        
        /// <remarks/>
        public void AddUserWithMobileNumber2Async(string username, string password, int productId, string mobileNumber, string firstName, string lastName, string userName1, string email, object userState) {
            if ((this.AddUserWithMobileNumber2OperationCompleted == null)) {
                this.AddUserWithMobileNumber2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserWithMobileNumber2OperationCompleted);
            }
            this.InvokeAsync("AddUserWithMobileNumber2", new object[] {
                        username,
                        password,
                        productId,
                        mobileNumber,
                        firstName,
                        lastName,
                        userName1,
                        email}, this.AddUserWithMobileNumber2OperationCompleted, userState);
        }
        
        private void OnAddUserWithMobileNumber2OperationCompleted(object arg) {
            if ((this.AddUserWithMobileNumber2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserWithMobileNumber2Completed(this, new AddUserWithMobileNumber2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUser(string username, string password, int productId, string descriptions, string mobileNumber, string emailAddress, string nationalCode, string name, string family, string corporation, string phone, string fax, string address, string postalCode, string certificateNumber) {
            object[] results = this.Invoke("AddUser", new object[] {
                        username,
                        password,
                        productId,
                        descriptions,
                        mobileNumber,
                        emailAddress,
                        nationalCode,
                        name,
                        family,
                        corporation,
                        phone,
                        fax,
                        address,
                        postalCode,
                        certificateNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserAsync(string username, string password, int productId, string descriptions, string mobileNumber, string emailAddress, string nationalCode, string name, string family, string corporation, string phone, string fax, string address, string postalCode, string certificateNumber) {
            this.AddUserAsync(username, password, productId, descriptions, mobileNumber, emailAddress, nationalCode, name, family, corporation, phone, fax, address, postalCode, certificateNumber, null);
        }
        
        /// <remarks/>
        public void AddUserAsync(
                    string username, 
                    string password, 
                    int productId, 
                    string descriptions, 
                    string mobileNumber, 
                    string emailAddress, 
                    string nationalCode, 
                    string name, 
                    string family, 
                    string corporation, 
                    string phone, 
                    string fax, 
                    string address, 
                    string postalCode, 
                    string certificateNumber, 
                    object userState) {
            if ((this.AddUserOperationCompleted == null)) {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                        username,
                        password,
                        productId,
                        descriptions,
                        mobileNumber,
                        emailAddress,
                        nationalCode,
                        name,
                        family,
                        corporation,
                        phone,
                        fax,
                        address,
                        postalCode,
                        certificateNumber}, this.AddUserOperationCompleted, userState);
        }
        
        private void OnAddUserOperationCompleted(object arg) {
            if ((this.AddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserWithLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUserWithLocation(
                    string username, 
                    string password, 
                    int productId, 
                    string descriptions, 
                    string mobileNumber, 
                    string emailAddress, 
                    string nationalCode, 
                    string name, 
                    string family, 
                    string corporation, 
                    string phone, 
                    string fax, 
                    string address, 
                    string postalCode, 
                    string certificateNumber, 
                    int country, 
                    int province, 
                    int city) {
            object[] results = this.Invoke("AddUserWithLocation", new object[] {
                        username,
                        password,
                        productId,
                        descriptions,
                        mobileNumber,
                        emailAddress,
                        nationalCode,
                        name,
                        family,
                        corporation,
                        phone,
                        fax,
                        address,
                        postalCode,
                        certificateNumber,
                        country,
                        province,
                        city});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserWithLocationAsync(
                    string username, 
                    string password, 
                    int productId, 
                    string descriptions, 
                    string mobileNumber, 
                    string emailAddress, 
                    string nationalCode, 
                    string name, 
                    string family, 
                    string corporation, 
                    string phone, 
                    string fax, 
                    string address, 
                    string postalCode, 
                    string certificateNumber, 
                    int country, 
                    int province, 
                    int city) {
            this.AddUserWithLocationAsync(username, password, productId, descriptions, mobileNumber, emailAddress, nationalCode, name, family, corporation, phone, fax, address, postalCode, certificateNumber, country, province, city, null);
        }
        
        /// <remarks/>
        public void AddUserWithLocationAsync(
                    string username, 
                    string password, 
                    int productId, 
                    string descriptions, 
                    string mobileNumber, 
                    string emailAddress, 
                    string nationalCode, 
                    string name, 
                    string family, 
                    string corporation, 
                    string phone, 
                    string fax, 
                    string address, 
                    string postalCode, 
                    string certificateNumber, 
                    int country, 
                    int province, 
                    int city, 
                    object userState) {
            if ((this.AddUserWithLocationOperationCompleted == null)) {
                this.AddUserWithLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserWithLocationOperationCompleted);
            }
            this.InvokeAsync("AddUserWithLocation", new object[] {
                        username,
                        password,
                        productId,
                        descriptions,
                        mobileNumber,
                        emailAddress,
                        nationalCode,
                        name,
                        family,
                        corporation,
                        phone,
                        fax,
                        address,
                        postalCode,
                        certificateNumber,
                        country,
                        province,
                        city}, this.AddUserWithLocationOperationCompleted, userState);
        }
        
        private void OnAddUserWithLocationOperationCompleted(object arg) {
            if ((this.AddUserWithLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserWithLocationCompleted(this, new AddUserWithLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserComplete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUserComplete(
                    string username, 
                    string password, 
                    int productId, 
                    string descriptions, 
                    string mobileNumber, 
                    string emailAddress, 
                    string nationalCode, 
                    string name, 
                    string family, 
                    string corporation, 
                    string phone, 
                    string fax, 
                    string address, 
                    string postalCode, 
                    string certificateNumber, 
                    int country, 
                    int province, 
                    int city, 
                    HowFindUsChoices howFindUs, 
                    string commercialCode, 
                    string saleId, 
                    string recommanderId) {
            object[] results = this.Invoke("AddUserComplete", new object[] {
                        username,
                        password,
                        productId,
                        descriptions,
                        mobileNumber,
                        emailAddress,
                        nationalCode,
                        name,
                        family,
                        corporation,
                        phone,
                        fax,
                        address,
                        postalCode,
                        certificateNumber,
                        country,
                        province,
                        city,
                        howFindUs,
                        commercialCode,
                        saleId,
                        recommanderId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserCompleteAsync(
                    string username, 
                    string password, 
                    int productId, 
                    string descriptions, 
                    string mobileNumber, 
                    string emailAddress, 
                    string nationalCode, 
                    string name, 
                    string family, 
                    string corporation, 
                    string phone, 
                    string fax, 
                    string address, 
                    string postalCode, 
                    string certificateNumber, 
                    int country, 
                    int province, 
                    int city, 
                    HowFindUsChoices howFindUs, 
                    string commercialCode, 
                    string saleId, 
                    string recommanderId) {
            this.AddUserCompleteAsync(username, password, productId, descriptions, mobileNumber, emailAddress, nationalCode, name, family, corporation, phone, fax, address, postalCode, certificateNumber, country, province, city, howFindUs, commercialCode, saleId, recommanderId, null);
        }
        
        /// <remarks/>
        public void AddUserCompleteAsync(
                    string username, 
                    string password, 
                    int productId, 
                    string descriptions, 
                    string mobileNumber, 
                    string emailAddress, 
                    string nationalCode, 
                    string name, 
                    string family, 
                    string corporation, 
                    string phone, 
                    string fax, 
                    string address, 
                    string postalCode, 
                    string certificateNumber, 
                    int country, 
                    int province, 
                    int city, 
                    HowFindUsChoices howFindUs, 
                    string commercialCode, 
                    string saleId, 
                    string recommanderId, 
                    object userState) {
            if ((this.AddUserCompleteOperationCompleted == null)) {
                this.AddUserCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserCompleteOperationCompleted);
            }
            this.InvokeAsync("AddUserComplete", new object[] {
                        username,
                        password,
                        productId,
                        descriptions,
                        mobileNumber,
                        emailAddress,
                        nationalCode,
                        name,
                        family,
                        corporation,
                        phone,
                        fax,
                        address,
                        postalCode,
                        certificateNumber,
                        country,
                        province,
                        city,
                        howFindUs,
                        commercialCode,
                        saleId,
                        recommanderId}, this.AddUserCompleteOperationCompleted, userState);
        }
        
        private void OnAddUserCompleteOperationCompleted(object arg) {
            if ((this.AddUserCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleteCompleted(this, new AddUserCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeUserCreditBySeccondPass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangeUserCreditBySeccondPass(string username, string seccondPassword, double amount, string description, string targetUsername, bool GetTax) {
            object[] results = this.Invoke("ChangeUserCreditBySeccondPass", new object[] {
                        username,
                        seccondPassword,
                        amount,
                        description,
                        targetUsername,
                        GetTax});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserCreditBySeccondPassAsync(string username, string seccondPassword, double amount, string description, string targetUsername, bool GetTax) {
            this.ChangeUserCreditBySeccondPassAsync(username, seccondPassword, amount, description, targetUsername, GetTax, null);
        }
        
        /// <remarks/>
        public void ChangeUserCreditBySeccondPassAsync(string username, string seccondPassword, double amount, string description, string targetUsername, bool GetTax, object userState) {
            if ((this.ChangeUserCreditBySeccondPassOperationCompleted == null)) {
                this.ChangeUserCreditBySeccondPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserCreditBySeccondPassOperationCompleted);
            }
            this.InvokeAsync("ChangeUserCreditBySeccondPass", new object[] {
                        username,
                        seccondPassword,
                        amount,
                        description,
                        targetUsername,
                        GetTax}, this.ChangeUserCreditBySeccondPassOperationCompleted, userState);
        }
        
        private void OnChangeUserCreditBySeccondPassOperationCompleted(object arg) {
            if ((this.ChangeUserCreditBySeccondPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserCreditBySeccondPassCompleted(this, new ChangeUserCreditBySeccondPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeUserCredit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangeUserCredit(string username, string password, double amount, string description, string targetUsername, bool GetTax) {
            object[] results = this.Invoke("ChangeUserCredit", new object[] {
                        username,
                        password,
                        amount,
                        description,
                        targetUsername,
                        GetTax});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserCreditAsync(string username, string password, double amount, string description, string targetUsername, bool GetTax) {
            this.ChangeUserCreditAsync(username, password, amount, description, targetUsername, GetTax, null);
        }
        
        /// <remarks/>
        public void ChangeUserCreditAsync(string username, string password, double amount, string description, string targetUsername, bool GetTax, object userState) {
            if ((this.ChangeUserCreditOperationCompleted == null)) {
                this.ChangeUserCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserCreditOperationCompleted);
            }
            this.InvokeAsync("ChangeUserCredit", new object[] {
                        username,
                        password,
                        amount,
                        description,
                        targetUsername,
                        GetTax}, this.ChangeUserCreditOperationCompleted, userState);
        }
        
        private void OnChangeUserCreditOperationCompleted(object arg) {
            if ((this.ChangeUserCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserCreditCompleted(this, new ChangeUserCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserWallet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetUserWallet(string username, string password) {
            object[] results = this.Invoke("GetUserWallet", new object[] {
                        username,
                        password});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserWalletAsync(string username, string password) {
            this.GetUserWalletAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetUserWalletAsync(string username, string password, object userState) {
            if ((this.GetUserWalletOperationCompleted == null)) {
                this.GetUserWalletOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserWalletOperationCompleted);
            }
            this.InvokeAsync("GetUserWallet", new object[] {
                        username,
                        password}, this.GetUserWalletOperationCompleted, userState);
        }
        
        private void OnGetUserWalletOperationCompleted(object arg) {
            if ((this.GetUserWalletCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserWalletCompleted(this, new GetUserWalletCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserWalletTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public WalletGridList[] GetUserWalletTransaction(string username, string password, System.DateTime dateFrom, System.DateTime dateTo, int count, int startIndex, PayTypes payType, PayLocs payLoc) {
            object[] results = this.Invoke("GetUserWalletTransaction", new object[] {
                        username,
                        password,
                        dateFrom,
                        dateTo,
                        count,
                        startIndex,
                        payType,
                        payLoc});
            return ((WalletGridList[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserWalletTransactionAsync(string username, string password, System.DateTime dateFrom, System.DateTime dateTo, int count, int startIndex, PayTypes payType, PayLocs payLoc) {
            this.GetUserWalletTransactionAsync(username, password, dateFrom, dateTo, count, startIndex, payType, payLoc, null);
        }
        
        /// <remarks/>
        public void GetUserWalletTransactionAsync(string username, string password, System.DateTime dateFrom, System.DateTime dateTo, int count, int startIndex, PayTypes payType, PayLocs payLoc, object userState) {
            if ((this.GetUserWalletTransactionOperationCompleted == null)) {
                this.GetUserWalletTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserWalletTransactionOperationCompleted);
            }
            this.InvokeAsync("GetUserWalletTransaction", new object[] {
                        username,
                        password,
                        dateFrom,
                        dateTo,
                        count,
                        startIndex,
                        payType,
                        payLoc}, this.GetUserWalletTransactionOperationCompleted, userState);
        }
        
        private void OnGetUserWalletTransactionOperationCompleted(object arg) {
            if ((this.GetUserWalletTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserWalletTransactionCompleted(this, new GetUserWalletTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeductUserCredit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeductUserCredit(string username, string password, double amount, string description) {
            object[] results = this.Invoke("DeductUserCredit", new object[] {
                        username,
                        password,
                        amount,
                        description});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeductUserCreditAsync(string username, string password, double amount, string description) {
            this.DeductUserCreditAsync(username, password, amount, description, null);
        }
        
        /// <remarks/>
        public void DeductUserCreditAsync(string username, string password, double amount, string description, object userState) {
            if ((this.DeductUserCreditOperationCompleted == null)) {
                this.DeductUserCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeductUserCreditOperationCompleted);
            }
            this.InvokeAsync("DeductUserCredit", new object[] {
                        username,
                        password,
                        amount,
                        description}, this.DeductUserCreditOperationCompleted, userState);
        }
        
        private void OnDeductUserCreditOperationCompleted(object arg) {
            if ((this.DeductUserCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeductUserCreditCompleted(this, new DeductUserCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeUserCredit2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangeUserCredit2(string username, string password, string amount, string description, string targetUsername, string GetTax) {
            object[] results = this.Invoke("ChangeUserCredit2", new object[] {
                        username,
                        password,
                        amount,
                        description,
                        targetUsername,
                        GetTax});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeUserCredit2Async(string username, string password, string amount, string description, string targetUsername, string GetTax) {
            this.ChangeUserCredit2Async(username, password, amount, description, targetUsername, GetTax, null);
        }
        
        /// <remarks/>
        public void ChangeUserCredit2Async(string username, string password, string amount, string description, string targetUsername, string GetTax, object userState) {
            if ((this.ChangeUserCredit2OperationCompleted == null)) {
                this.ChangeUserCredit2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeUserCredit2OperationCompleted);
            }
            this.InvokeAsync("ChangeUserCredit2", new object[] {
                        username,
                        password,
                        amount,
                        description,
                        targetUsername,
                        GetTax}, this.ChangeUserCredit2OperationCompleted, userState);
        }
        
        private void OnChangeUserCredit2OperationCompleted(object arg) {
            if ((this.ChangeUserCredit2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeUserCredit2Completed(this, new ChangeUserCredit2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserTransactions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CredistGridList[] GetUserTransactions(string username, string password, string targetUsername, CreditTypes creditType, System.DateTime dateFrom, System.DateTime dateTo, string keyword) {
            object[] results = this.Invoke("GetUserTransactions", new object[] {
                        username,
                        password,
                        targetUsername,
                        creditType,
                        dateFrom,
                        dateTo,
                        keyword});
            return ((CredistGridList[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserTransactionsAsync(string username, string password, string targetUsername, CreditTypes creditType, System.DateTime dateFrom, System.DateTime dateTo, string keyword) {
            this.GetUserTransactionsAsync(username, password, targetUsername, creditType, dateFrom, dateTo, keyword, null);
        }
        
        /// <remarks/>
        public void GetUserTransactionsAsync(string username, string password, string targetUsername, CreditTypes creditType, System.DateTime dateFrom, System.DateTime dateTo, string keyword, object userState) {
            if ((this.GetUserTransactionsOperationCompleted == null)) {
                this.GetUserTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTransactionsOperationCompleted);
            }
            this.InvokeAsync("GetUserTransactions", new object[] {
                        username,
                        password,
                        targetUsername,
                        creditType,
                        dateFrom,
                        dateTo,
                        keyword}, this.GetUserTransactionsOperationCompleted, userState);
        }
        
        private void OnGetUserTransactionsOperationCompleted(object arg) {
            if ((this.GetUserTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserTransactionsCompleted(this, new GetUserTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserDetails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserGridList GetUserDetails(string username, string password, string targetUsername) {
            object[] results = this.Invoke("GetUserDetails", new object[] {
                        username,
                        password,
                        targetUsername});
            return ((UserGridList)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserDetailsAsync(string username, string password, string targetUsername) {
            this.GetUserDetailsAsync(username, password, targetUsername, null);
        }
        
        /// <remarks/>
        public void GetUserDetailsAsync(string username, string password, string targetUsername, object userState) {
            if ((this.GetUserDetailsOperationCompleted == null)) {
                this.GetUserDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserDetailsOperationCompleted);
            }
            this.InvokeAsync("GetUserDetails", new object[] {
                        username,
                        password,
                        targetUsername}, this.GetUserDetailsOperationCompleted, userState);
        }
        
        private void OnGetUserDetailsOperationCompleted(object arg) {
            if ((this.GetUserDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserDetailsCompleted(this, new GetUserDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserCredit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetUserCredit(string username, string password, string targetUsername) {
            object[] results = this.Invoke("GetUserCredit", new object[] {
                        username,
                        password,
                        targetUsername});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserCreditAsync(string username, string password, string targetUsername) {
            this.GetUserCreditAsync(username, password, targetUsername, null);
        }
        
        /// <remarks/>
        public void GetUserCreditAsync(string username, string password, string targetUsername, object userState) {
            if ((this.GetUserCreditOperationCompleted == null)) {
                this.GetUserCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserCreditOperationCompleted);
            }
            this.InvokeAsync("GetUserCredit", new object[] {
                        username,
                        password,
                        targetUsername}, this.GetUserCreditOperationCompleted, userState);
        }
        
        private void OnGetUserCreditOperationCompleted(object arg) {
            if ((this.GetUserCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCreditCompleted(this, new GetUserCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemoveUser(string username, string password, string targetUsername) {
            object[] results = this.Invoke("RemoveUser", new object[] {
                        username,
                        password,
                        targetUsername});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveUserAsync(string username, string password, string targetUsername) {
            this.RemoveUserAsync(username, password, targetUsername, null);
        }
        
        /// <remarks/>
        public void RemoveUserAsync(string username, string password, string targetUsername, object userState) {
            if ((this.RemoveUserOperationCompleted == null)) {
                this.RemoveUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveUserOperationCompleted);
            }
            this.InvokeAsync("RemoveUser", new object[] {
                        username,
                        password,
                        targetUsername}, this.RemoveUserOperationCompleted, userState);
        }
        
        private void OnRemoveUserOperationCompleted(object arg) {
            if ((this.RemoveUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveUserCompleted(this, new RemoveUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserNumbers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetUserNumbers(string username, string password) {
            object[] results = this.Invoke("GetUserNumbers", new object[] {
                        username,
                        password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserNumbersAsync(string username, string password) {
            this.GetUserNumbersAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetUserNumbersAsync(string username, string password, object userState) {
            if ((this.GetUserNumbersOperationCompleted == null)) {
                this.GetUserNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserNumbersOperationCompleted);
            }
            this.InvokeAsync("GetUserNumbers", new object[] {
                        username,
                        password}, this.GetUserNumbersOperationCompleted, userState);
        }
        
        private void OnGetUserNumbersOperationCompleted(object arg) {
            if ((this.GetUserNumbersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserNumbersCompleted(this, new GetUserNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPayment", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddPayment(string username, string password, string name, string family, string bankName, string code, double amount, string cardNumber) {
            object[] results = this.Invoke("AddPayment", new object[] {
                        username,
                        password,
                        name,
                        family,
                        bankName,
                        code,
                        amount,
                        cardNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddPaymentAsync(string username, string password, string name, string family, string bankName, string code, double amount, string cardNumber) {
            this.AddPaymentAsync(username, password, name, family, bankName, code, amount, cardNumber, null);
        }
        
        /// <remarks/>
        public void AddPaymentAsync(string username, string password, string name, string family, string bankName, string code, double amount, string cardNumber, object userState) {
            if ((this.AddPaymentOperationCompleted == null)) {
                this.AddPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddPaymentOperationCompleted);
            }
            this.InvokeAsync("AddPayment", new object[] {
                        username,
                        password,
                        name,
                        family,
                        bankName,
                        code,
                        amount,
                        cardNumber}, this.AddPaymentOperationCompleted, userState);
        }
        
        private void OnAddPaymentOperationCompleted(object arg) {
            if ((this.AddPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddPaymentCompleted(this, new AddPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HasFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int HasFilter(string username, string password, string text) {
            object[] results = this.Invoke("HasFilter", new object[] {
                        username,
                        password,
                        text});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HasFilterAsync(string username, string password, string text) {
            this.HasFilterAsync(username, password, text, null);
        }
        
        /// <remarks/>
        public void HasFilterAsync(string username, string password, string text, object userState) {
            if ((this.HasFilterOperationCompleted == null)) {
                this.HasFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasFilterOperationCompleted);
            }
            this.InvokeAsync("HasFilter", new object[] {
                        username,
                        password,
                        text}, this.HasFilterOperationCompleted, userState);
        }
        
        private void OnHasFilterOperationCompleted(object arg) {
            if ((this.HasFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasFilterCompleted(this, new HasFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserGridList[] GetUsers(string username, string password) {
            object[] results = this.Invoke("GetUsers", new object[] {
                        username,
                        password});
            return ((UserGridList[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersAsync(string username, string password) {
            this.GetUsersAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetUsersAsync(string username, string password, object userState) {
            if ((this.GetUsersOperationCompleted == null)) {
                this.GetUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOperationCompleted);
            }
            this.InvokeAsync("GetUsers", new object[] {
                        username,
                        password}, this.GetUsersOperationCompleted, userState);
        }
        
        private void OnGetUsersOperationCompleted(object arg) {
            if ((this.GetUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthenticateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AuthenticateUser(string username, string password) {
            object[] results = this.Invoke("AuthenticateUser", new object[] {
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string username, string password) {
            this.AuthenticateUserAsync(username, password, null);
        }
        
        /// <remarks/>
        public void AuthenticateUserAsync(string username, string password, object userState) {
            if ((this.AuthenticateUserOperationCompleted == null)) {
                this.AuthenticateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserOperationCompleted);
            }
            this.InvokeAsync("AuthenticateUser", new object[] {
                        username,
                        password}, this.AuthenticateUserOperationCompleted, userState);
        }
        
        private void OnAuthenticateUserOperationCompleted(object arg) {
            if ((this.AuthenticateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUserCompleted(this, new AuthenticateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExpireDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExpireDate(string username, string password) {
            object[] results = this.Invoke("GetExpireDate", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExpireDateAsync(string username, string password) {
            this.GetExpireDateAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetExpireDateAsync(string username, string password, object userState) {
            if ((this.GetExpireDateOperationCompleted == null)) {
                this.GetExpireDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpireDateOperationCompleted);
            }
            this.InvokeAsync("GetExpireDate", new object[] {
                        username,
                        password}, this.GetExpireDateOperationCompleted, userState);
        }
        
        private void OnGetExpireDateOperationCompleted(object arg) {
            if ((this.GetExpireDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpireDateCompleted(this, new GetExpireDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEnExpireDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.DateTime GetEnExpireDate(string username, string password) {
            object[] results = this.Invoke("GetEnExpireDate", new object[] {
                        username,
                        password});
            return ((System.DateTime)(results[0]));
        }
        
        /// <remarks/>
        public void GetEnExpireDateAsync(string username, string password) {
            this.GetEnExpireDateAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetEnExpireDateAsync(string username, string password, object userState) {
            if ((this.GetEnExpireDateOperationCompleted == null)) {
                this.GetEnExpireDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEnExpireDateOperationCompleted);
            }
            this.InvokeAsync("GetEnExpireDate", new object[] {
                        username,
                        password}, this.GetEnExpireDateOperationCompleted, userState);
        }
        
        private void OnGetEnExpireDateOperationCompleted(object arg) {
            if ((this.GetEnExpireDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEnExpireDateCompleted(this, new GetEnExpireDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProvinces", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Province[] GetProvinces(string username, string password) {
            object[] results = this.Invoke("GetProvinces", new object[] {
                        username,
                        password});
            return ((Province[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProvincesAsync(string username, string password) {
            this.GetProvincesAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetProvincesAsync(string username, string password, object userState) {
            if ((this.GetProvincesOperationCompleted == null)) {
                this.GetProvincesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProvincesOperationCompleted);
            }
            this.InvokeAsync("GetProvinces", new object[] {
                        username,
                        password}, this.GetProvincesOperationCompleted, userState);
        }
        
        private void OnGetProvincesOperationCompleted(object arg) {
            if ((this.GetProvincesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProvincesCompleted(this, new GetProvincesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCities", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public City[] GetCities(string username, string password, int provinceId) {
            object[] results = this.Invoke("GetCities", new object[] {
                        username,
                        password,
                        provinceId});
            return ((City[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCitiesAsync(string username, string password, int provinceId) {
            this.GetCitiesAsync(username, password, provinceId, null);
        }
        
        /// <remarks/>
        public void GetCitiesAsync(string username, string password, int provinceId, object userState) {
            if ((this.GetCitiesOperationCompleted == null)) {
                this.GetCitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCitiesOperationCompleted);
            }
            this.InvokeAsync("GetCities", new object[] {
                        username,
                        password,
                        provinceId}, this.GetCitiesOperationCompleted, userState);
        }
        
        private void OnGetCitiesOperationCompleted(object arg) {
            if ((this.GetCitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCitiesCompleted(this, new GetCitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ForgotPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ForgotPassword(string username, string password, string mobileNumber, string emailAddress, string targetUsername) {
            object[] results = this.Invoke("ForgotPassword", new object[] {
                        username,
                        password,
                        mobileNumber,
                        emailAddress,
                        targetUsername});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ForgotPasswordAsync(string username, string password, string mobileNumber, string emailAddress, string targetUsername) {
            this.ForgotPasswordAsync(username, password, mobileNumber, emailAddress, targetUsername, null);
        }
        
        /// <remarks/>
        public void ForgotPasswordAsync(string username, string password, string mobileNumber, string emailAddress, string targetUsername, object userState) {
            if ((this.ForgotPasswordOperationCompleted == null)) {
                this.ForgotPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForgotPasswordOperationCompleted);
            }
            this.InvokeAsync("ForgotPassword", new object[] {
                        username,
                        password,
                        mobileNumber,
                        emailAddress,
                        targetUsername}, this.ForgotPasswordOperationCompleted, userState);
        }
        
        private void OnForgotPasswordOperationCompleted(object arg) {
            if ((this.ForgotPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForgotPasswordCompleted(this, new ForgotPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserWithUserNameAndPass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddUserWithUserNameAndPass(
                    string username, 
                    string password, 
                    string targetUserName, 
                    string targetUserPassword, 
                    int productId, 
                    string descriptions, 
                    string mobileNumber, 
                    string emailAddress, 
                    string nationalCode, 
                    string name, 
                    string family, 
                    string corporation, 
                    string phone, 
                    string fax, 
                    string address, 
                    string postalCode, 
                    string certificateNumber) {
            object[] results = this.Invoke("AddUserWithUserNameAndPass", new object[] {
                        username,
                        password,
                        targetUserName,
                        targetUserPassword,
                        productId,
                        descriptions,
                        mobileNumber,
                        emailAddress,
                        nationalCode,
                        name,
                        family,
                        corporation,
                        phone,
                        fax,
                        address,
                        postalCode,
                        certificateNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserWithUserNameAndPassAsync(
                    string username, 
                    string password, 
                    string targetUserName, 
                    string targetUserPassword, 
                    int productId, 
                    string descriptions, 
                    string mobileNumber, 
                    string emailAddress, 
                    string nationalCode, 
                    string name, 
                    string family, 
                    string corporation, 
                    string phone, 
                    string fax, 
                    string address, 
                    string postalCode, 
                    string certificateNumber) {
            this.AddUserWithUserNameAndPassAsync(username, password, targetUserName, targetUserPassword, productId, descriptions, mobileNumber, emailAddress, nationalCode, name, family, corporation, phone, fax, address, postalCode, certificateNumber, null);
        }
        
        /// <remarks/>
        public void AddUserWithUserNameAndPassAsync(
                    string username, 
                    string password, 
                    string targetUserName, 
                    string targetUserPassword, 
                    int productId, 
                    string descriptions, 
                    string mobileNumber, 
                    string emailAddress, 
                    string nationalCode, 
                    string name, 
                    string family, 
                    string corporation, 
                    string phone, 
                    string fax, 
                    string address, 
                    string postalCode, 
                    string certificateNumber, 
                    object userState) {
            if ((this.AddUserWithUserNameAndPassOperationCompleted == null)) {
                this.AddUserWithUserNameAndPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserWithUserNameAndPassOperationCompleted);
            }
            this.InvokeAsync("AddUserWithUserNameAndPass", new object[] {
                        username,
                        password,
                        targetUserName,
                        targetUserPassword,
                        productId,
                        descriptions,
                        mobileNumber,
                        emailAddress,
                        nationalCode,
                        name,
                        family,
                        corporation,
                        phone,
                        fax,
                        address,
                        postalCode,
                        certificateNumber}, this.AddUserWithUserNameAndPassOperationCompleted, userState);
        }
        
        private void OnAddUserWithUserNameAndPassOperationCompleted(object arg) {
            if ((this.AddUserWithUserNameAndPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserWithUserNameAndPassCompleted(this, new AddUserWithUserNameAndPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RevivalUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RevivalUser(string username, string password, string targetUserName) {
            object[] results = this.Invoke("RevivalUser", new object[] {
                        username,
                        password,
                        targetUserName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RevivalUserAsync(string username, string password, string targetUserName) {
            this.RevivalUserAsync(username, password, targetUserName, null);
        }
        
        /// <remarks/>
        public void RevivalUserAsync(string username, string password, string targetUserName, object userState) {
            if ((this.RevivalUserOperationCompleted == null)) {
                this.RevivalUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRevivalUserOperationCompleted);
            }
            this.InvokeAsync("RevivalUser", new object[] {
                        username,
                        password,
                        targetUserName}, this.RevivalUserOperationCompleted, userState);
        }
        
        private void OnRevivalUserOperationCompleted(object arg) {
            if ((this.RevivalUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RevivalUserCompleted(this, new RevivalUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserByUserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UsersBL GetUserByUserID(string username, string password, string pass, int userId) {
            object[] results = this.Invoke("GetUserByUserID", new object[] {
                        username,
                        password,
                        pass,
                        userId});
            return ((UsersBL)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByUserIDAsync(string username, string password, string pass, int userId) {
            this.GetUserByUserIDAsync(username, password, pass, userId, null);
        }
        
        /// <remarks/>
        public void GetUserByUserIDAsync(string username, string password, string pass, int userId, object userState) {
            if ((this.GetUserByUserIDOperationCompleted == null)) {
                this.GetUserByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetUserByUserID", new object[] {
                        username,
                        password,
                        pass,
                        userId}, this.GetUserByUserIDOperationCompleted, userState);
        }
        
        private void OnGetUserByUserIDOperationCompleted(object arg) {
            if ((this.GetUserByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByUserIDCompleted(this, new GetUserByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserCreditBySecondPass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetUserCreditBySecondPass(string username, string secondPassword, string targetUsername) {
            object[] results = this.Invoke("GetUserCreditBySecondPass", new object[] {
                        username,
                        secondPassword,
                        targetUsername});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserCreditBySecondPassAsync(string username, string secondPassword, string targetUsername) {
            this.GetUserCreditBySecondPassAsync(username, secondPassword, targetUsername, null);
        }
        
        /// <remarks/>
        public void GetUserCreditBySecondPassAsync(string username, string secondPassword, string targetUsername, object userState) {
            if ((this.GetUserCreditBySecondPassOperationCompleted == null)) {
                this.GetUserCreditBySecondPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserCreditBySecondPassOperationCompleted);
            }
            this.InvokeAsync("GetUserCreditBySecondPass", new object[] {
                        username,
                        secondPassword,
                        targetUsername}, this.GetUserCreditBySecondPassOperationCompleted, userState);
        }
        
        private void OnGetUserCreditBySecondPassOperationCompleted(object arg) {
            if ((this.GetUserCreditBySecondPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCreditBySecondPassCompleted(this, new GetUserCreditBySecondPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum HowFindUsChoices {
        
        /// <remarks/>
        CallMarketting,
        
        /// <remarks/>
        NewsPapers,
        
        /// <remarks/>
        EmailMarketting,
        
        /// <remarks/>
        Websites,
        
        /// <remarks/>
        SearchEngines,
        
        /// <remarks/>
        Recommandation,
        
        /// <remarks/>
        SMSMarketting,
        
        /// <remarks/>
        Friends,
        
        /// <remarks/>
        Exhibitions,
        
        /// <remarks/>
        Billboards,
        
        /// <remarks/>
        Other,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum PayTypes {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        ChargeWallet,
        
        /// <remarks/>
        BuySms,
        
        /// <remarks/>
        BuyWidget,
        
        /// <remarks/>
        BuyResources,
        
        /// <remarks/>
        BuyTemplate,
        
        /// <remarks/>
        BuyDomain,
        
        /// <remarks/>
        BuyCms,
        
        /// <remarks/>
        BuyPackage,
        
        /// <remarks/>
        BuyNumber,
        
        /// <remarks/>
        SendFax,
        
        /// <remarks/>
        SendVoiceSms,
        
        /// <remarks/>
        InCommingCall,
        
        /// <remarks/>
        Divert,
        
        /// <remarks/>
        Revival,
        
        /// <remarks/>
        InstallMent,
        
        /// <remarks/>
        NotifySms,
        
        /// <remarks/>
        RevivalSubReseller,
        
        /// <remarks/>
        ActivateSubReseller,
        
        /// <remarks/>
        ActivatePanel,
        
        /// <remarks/>
        UpgradePanel,
        
        /// <remarks/>
        PanelPrice,
        
        /// <remarks/>
        Cancel,
        
        /// <remarks/>
        RefundToUser,
        
        /// <remarks/>
        VoiceMessage,
        
        /// <remarks/>
        DeleteFromReport,
        
        /// <remarks/>
        AvaPayamCharge,
        
        /// <remarks/>
        Discount,
        
        /// <remarks/>
        BuyWebsite,
        
        /// <remarks/>
        BuyWebsiteAndDomain,
        
        /// <remarks/>
        ActivateCRMPanel,
        
        /// <remarks/>
        RenewNumber,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum PayLocs {
        
        /// <remarks/>
        Farapayamak,
        
        /// <remarks/>
        DTS,
        
        /// <remarks/>
        Rayo,
        
        /// <remarks/>
        AvaPayam,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class WalletGridList {
        
        private long walletIDField;
        
        private int userIDField;
        
        private double walletAmountField;
        
        private double walletRemainField;
        
        private System.DateTime transactDateField;
        
        private string descriptionField;
        
        private byte payTypeField;
        
        private byte payLocField;
        
        /// <remarks/>
        public long WalletID {
            get {
                return this.walletIDField;
            }
            set {
                this.walletIDField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public double WalletAmount {
            get {
                return this.walletAmountField;
            }
            set {
                this.walletAmountField = value;
            }
        }
        
        /// <remarks/>
        public double WalletRemain {
            get {
                return this.walletRemainField;
            }
            set {
                this.walletRemainField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TransactDate {
            get {
                return this.transactDateField;
            }
            set {
                this.transactDateField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public byte PayType {
            get {
                return this.payTypeField;
            }
            set {
                this.payTypeField = value;
            }
        }
        
        /// <remarks/>
        public byte PayLoc {
            get {
                return this.payLocField;
            }
            set {
                this.payLocField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class City {
        
        private int cityIDField;
        
        private int provinceIDField;
        
        private int userIDField;
        
        private string cityNameField;
        
        private int numberCountField;
        
        /// <remarks/>
        public int CityID {
            get {
                return this.cityIDField;
            }
            set {
                this.cityIDField = value;
            }
        }
        
        /// <remarks/>
        public int ProvinceID {
            get {
                return this.provinceIDField;
            }
            set {
                this.provinceIDField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string CityName {
            get {
                return this.cityNameField;
            }
            set {
                this.cityNameField = value;
            }
        }
        
        /// <remarks/>
        public int NumberCount {
            get {
                return this.numberCountField;
            }
            set {
                this.numberCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Province {
        
        private int provinceIDField;
        
        private int countryIDField;
        
        private int userIDField;
        
        private string provinceNameField;
        
        private int numberCountField;
        
        /// <remarks/>
        public int ProvinceID {
            get {
                return this.provinceIDField;
            }
            set {
                this.provinceIDField = value;
            }
        }
        
        /// <remarks/>
        public int CountryID {
            get {
                return this.countryIDField;
            }
            set {
                this.countryIDField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProvinceName {
            get {
                return this.provinceNameField;
            }
            set {
                this.provinceNameField = value;
            }
        }
        
        /// <remarks/>
        public int NumberCount {
            get {
                return this.numberCountField;
            }
            set {
                this.numberCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UserGridList {
        
        private int userIdField;
        
        private string userNameField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string corporationField;
        
        private string emailField;
        
        private string mobileNumbersField;
        
        private string phoneNumbersField;
        
        private string faxNumbersField;
        
        private string addressField;
        
        private string desctiptionsField;
        
        private byte userStatusField;
        
        private bool fixTariffField;
        
        private int maxTicketField;
        
        private int maxOrderNumberField;
        
        private string nationalCodeField;
        
        private bool accessToBranchsField;
        
        private bool bulkReportField;
        
        private bool enableDeliveryField;
        
        private string postalCodeField;
        
        private string certificateNumberField;
        
        private string provinceNameField;
        
        private string cityNameField;
        
        private int productIdField;
        
        private string commercialCodeField;
        
        private int userOwnerField;
        
        private bool isLegalField;
        
        private int userTypeField;
        
        private int tariffIDField;
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Corporation {
            get {
                return this.corporationField;
            }
            set {
                this.corporationField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string MobileNumbers {
            get {
                return this.mobileNumbersField;
            }
            set {
                this.mobileNumbersField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumbers {
            get {
                return this.phoneNumbersField;
            }
            set {
                this.phoneNumbersField = value;
            }
        }
        
        /// <remarks/>
        public string FaxNumbers {
            get {
                return this.faxNumbersField;
            }
            set {
                this.faxNumbersField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string Desctiptions {
            get {
                return this.desctiptionsField;
            }
            set {
                this.desctiptionsField = value;
            }
        }
        
        /// <remarks/>
        public byte UserStatus {
            get {
                return this.userStatusField;
            }
            set {
                this.userStatusField = value;
            }
        }
        
        /// <remarks/>
        public bool FixTariff {
            get {
                return this.fixTariffField;
            }
            set {
                this.fixTariffField = value;
            }
        }
        
        /// <remarks/>
        public int MaxTicket {
            get {
                return this.maxTicketField;
            }
            set {
                this.maxTicketField = value;
            }
        }
        
        /// <remarks/>
        public int MaxOrderNumber {
            get {
                return this.maxOrderNumberField;
            }
            set {
                this.maxOrderNumberField = value;
            }
        }
        
        /// <remarks/>
        public string NationalCode {
            get {
                return this.nationalCodeField;
            }
            set {
                this.nationalCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool AccessToBranchs {
            get {
                return this.accessToBranchsField;
            }
            set {
                this.accessToBranchsField = value;
            }
        }
        
        /// <remarks/>
        public bool BulkReport {
            get {
                return this.bulkReportField;
            }
            set {
                this.bulkReportField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableDelivery {
            get {
                return this.enableDeliveryField;
            }
            set {
                this.enableDeliveryField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CertificateNumber {
            get {
                return this.certificateNumberField;
            }
            set {
                this.certificateNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ProvinceName {
            get {
                return this.provinceNameField;
            }
            set {
                this.provinceNameField = value;
            }
        }
        
        /// <remarks/>
        public string CityName {
            get {
                return this.cityNameField;
            }
            set {
                this.cityNameField = value;
            }
        }
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public string CommercialCode {
            get {
                return this.commercialCodeField;
            }
            set {
                this.commercialCodeField = value;
            }
        }
        
        /// <remarks/>
        public int UserOwner {
            get {
                return this.userOwnerField;
            }
            set {
                this.userOwnerField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLegal {
            get {
                return this.isLegalField;
            }
            set {
                this.isLegalField = value;
            }
        }
        
        /// <remarks/>
        public int userType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
        
        /// <remarks/>
        public int TariffID {
            get {
                return this.tariffIDField;
            }
            set {
                this.tariffIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UsersBL))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreditsBL))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CredistGridList))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BaseBL {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UsersBL : BaseBL {
        
        private int userIdField;
        
        private int productIdField;
        
        private int tariffIdField;
        
        private int userOwnerField;
        
        private int userMasterField;
        
        private int userStepedMasterField;
        
        private int userTripleMasterField;
        
        private int themeIdField;
        
        private byte userTypeField;
        
        private int sellerIdField;
        
        private string userNameField;
        
        private string userPasswordField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string corporationField;
        
        private string emailField;
        
        private string mobileNumbersField;
        
        private string phoneNumbersField;
        
        private string faxNumbersField;
        
        private string mCIMobileField;
        
        private int countryField;
        
        private int provinceField;
        
        private int cityField;
        
        private string addressField;
        
        private System.DateTime regDateField;
        
        private System.DateTime expDateField;
        
        private System.DateTime contDateField;
        
        private double creditField;
        
        private int sendLimitField;
        
        private int dailyLimitField;
        
        private int dailyRichedField;
        
        private int sendSpeedField;
        
        private bool useWebserviceField;
        
        private bool useUrlField;
        
        private bool useWinField;
        
        private string signatureField;
        
        private string desctiptionsField;
        
        private string langField;
        
        private int defaultModuleField;
        
        private int defaultNumberField;
        
        private int subUserCountField;
        
        private byte userStatusField;
        
        private System.Nullable<System.DateTime> dailyDateField;
        
        private System.Nullable<System.DateTime> lastLoginField;
        
        private int loginCountField;
        
        private int successCountField;
        
        private int failedCountField;
        
        private int recCountField;
        
        private bool fixTariffField;
        
        private bool expireAlertField;
        
        private bool creditAlertField;
        
        private bool useBulkWebserviceField;
        
        private bool useBulkCityWebServiceField;
        
        private byte paymentTypeField;
        
        private int maxTicketField;
        
        private int maxOrderNumberField;
        
        private bool needBulkSubmitionField;
        
        private bool needPardisSubmitionField;
        
        private string nationalCodeField;
        
        private string fileAttachedField;
        
        private int howFindUsField;
        
        private int useChargeCardField;
        
        private int useOffCodeField;
        
        private bool accessToBranchsField;
        
        private bool bulkReportField;
        
        private bool enableDeliveryField;
        
        private int numberPriceField;
        
        private string postalCodeField;
        
        private string certificateNumberField;
        
        private bool isOnlineField;
        
        private string unFilterKeywordsField;
        
        private bool allowSubresellerField;
        
        private string fourDigitPwdField;
        
        private bool hasContractField;
        
        private byte moneyBackDeliveryField;
        
        private string infractionsField;
        
        private string allowedIPField;
        
        private bool sendEntryAlertField;
        
        private string allowedTimesField;
        
        private string referrerWebSiteField;
        
        private string commercialCodeField;
        
        private int recommandUserIdField;
        
        private bool useModulesForFreeField;
        
        private bool hasBeenChangedField;
        
        private double walletField;
        
        private int webserviceCallCountField;
        
        private System.Nullable<System.DateTime> activationDateField;
        
        private byte vipLevelField;
        
        private string userBehaviorField;
        
        private System.Nullable<System.DateTime> birthDateField;
        
        private int resellerPriceField;
        
        private bool useRevivalField;
        
        private double revivalPriceField;
        
        private double installMentPriceField;
        
        private int installMentField;
        
        private bool isRevivalField;
        
        private int revivalDiscountField;
        
        private double firstPriceField;
        
        private bool testPanelField;
        
        private bool isInstallMentField;
        
        private bool isLagalField;
        
        private bool firstContractField;
        
        private byte crmCallTypeField;
        
        private System.Nullable<System.DateTime> crmCallTimeField;
        
        private bool userProjectField;
        
        private bool accessToCRMField;
        
        private bool isTestCRMField;
        
        private System.Nullable<System.DateTime> expDateCRMField;
        
        private bool activatePanelField;
        
        private int crmProductIDField;
        
        private int centerIDField;
        
        private bool allowSubResellerCRMField;
        
        private bool unOfficialPaymentField;
        
        private string recommandUsIDField;
        
        private byte genderField;
        
        private System.Nullable<double> minCreditLowAlertField;
        
        private bool allowUseShareNumberAPIField;
        
        private string fatherNameField;
        
        private int birthPlaceField;
        
        private string companyNationalIDField;
        
        private string verificationCodeField;
        
        private bool allowOtpField;
        
        private string smsVerificationCodeField;
        
        private System.Nullable<System.DateTime> verificationExpireDateField;
        
        private bool isMobileVerifiedField;
        
        private System.Nullable<System.Guid> apiKeyField;
        
        private System.Nullable<bool> passwordIsWeakField;
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        public int TariffId {
            get {
                return this.tariffIdField;
            }
            set {
                this.tariffIdField = value;
            }
        }
        
        /// <remarks/>
        public int UserOwner {
            get {
                return this.userOwnerField;
            }
            set {
                this.userOwnerField = value;
            }
        }
        
        /// <remarks/>
        public int UserMaster {
            get {
                return this.userMasterField;
            }
            set {
                this.userMasterField = value;
            }
        }
        
        /// <remarks/>
        public int UserStepedMaster {
            get {
                return this.userStepedMasterField;
            }
            set {
                this.userStepedMasterField = value;
            }
        }
        
        /// <remarks/>
        public int UserTripleMaster {
            get {
                return this.userTripleMasterField;
            }
            set {
                this.userTripleMasterField = value;
            }
        }
        
        /// <remarks/>
        public int ThemeId {
            get {
                return this.themeIdField;
            }
            set {
                this.themeIdField = value;
            }
        }
        
        /// <remarks/>
        public byte UserType {
            get {
                return this.userTypeField;
            }
            set {
                this.userTypeField = value;
            }
        }
        
        /// <remarks/>
        public int SellerId {
            get {
                return this.sellerIdField;
            }
            set {
                this.sellerIdField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserPassword {
            get {
                return this.userPasswordField;
            }
            set {
                this.userPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Corporation {
            get {
                return this.corporationField;
            }
            set {
                this.corporationField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string MobileNumbers {
            get {
                return this.mobileNumbersField;
            }
            set {
                this.mobileNumbersField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumbers {
            get {
                return this.phoneNumbersField;
            }
            set {
                this.phoneNumbersField = value;
            }
        }
        
        /// <remarks/>
        public string FaxNumbers {
            get {
                return this.faxNumbersField;
            }
            set {
                this.faxNumbersField = value;
            }
        }
        
        /// <remarks/>
        public string MCIMobile {
            get {
                return this.mCIMobileField;
            }
            set {
                this.mCIMobileField = value;
            }
        }
        
        /// <remarks/>
        public int Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public int Province {
            get {
                return this.provinceField;
            }
            set {
                this.provinceField = value;
            }
        }
        
        /// <remarks/>
        public int City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime RegDate {
            get {
                return this.regDateField;
            }
            set {
                this.regDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpDate {
            get {
                return this.expDateField;
            }
            set {
                this.expDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ContDate {
            get {
                return this.contDateField;
            }
            set {
                this.contDateField = value;
            }
        }
        
        /// <remarks/>
        public double Credit {
            get {
                return this.creditField;
            }
            set {
                this.creditField = value;
            }
        }
        
        /// <remarks/>
        public int SendLimit {
            get {
                return this.sendLimitField;
            }
            set {
                this.sendLimitField = value;
            }
        }
        
        /// <remarks/>
        public int DailyLimit {
            get {
                return this.dailyLimitField;
            }
            set {
                this.dailyLimitField = value;
            }
        }
        
        /// <remarks/>
        public int DailyRiched {
            get {
                return this.dailyRichedField;
            }
            set {
                this.dailyRichedField = value;
            }
        }
        
        /// <remarks/>
        public int SendSpeed {
            get {
                return this.sendSpeedField;
            }
            set {
                this.sendSpeedField = value;
            }
        }
        
        /// <remarks/>
        public bool UseWebservice {
            get {
                return this.useWebserviceField;
            }
            set {
                this.useWebserviceField = value;
            }
        }
        
        /// <remarks/>
        public bool UseUrl {
            get {
                return this.useUrlField;
            }
            set {
                this.useUrlField = value;
            }
        }
        
        /// <remarks/>
        public bool UseWin {
            get {
                return this.useWinField;
            }
            set {
                this.useWinField = value;
            }
        }
        
        /// <remarks/>
        public string Signature {
            get {
                return this.signatureField;
            }
            set {
                this.signatureField = value;
            }
        }
        
        /// <remarks/>
        public string Desctiptions {
            get {
                return this.desctiptionsField;
            }
            set {
                this.desctiptionsField = value;
            }
        }
        
        /// <remarks/>
        public string Lang {
            get {
                return this.langField;
            }
            set {
                this.langField = value;
            }
        }
        
        /// <remarks/>
        public int DefaultModule {
            get {
                return this.defaultModuleField;
            }
            set {
                this.defaultModuleField = value;
            }
        }
        
        /// <remarks/>
        public int DefaultNumber {
            get {
                return this.defaultNumberField;
            }
            set {
                this.defaultNumberField = value;
            }
        }
        
        /// <remarks/>
        public int SubUserCount {
            get {
                return this.subUserCountField;
            }
            set {
                this.subUserCountField = value;
            }
        }
        
        /// <remarks/>
        public byte UserStatus {
            get {
                return this.userStatusField;
            }
            set {
                this.userStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DailyDate {
            get {
                return this.dailyDateField;
            }
            set {
                this.dailyDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastLogin {
            get {
                return this.lastLoginField;
            }
            set {
                this.lastLoginField = value;
            }
        }
        
        /// <remarks/>
        public int LoginCount {
            get {
                return this.loginCountField;
            }
            set {
                this.loginCountField = value;
            }
        }
        
        /// <remarks/>
        public int SuccessCount {
            get {
                return this.successCountField;
            }
            set {
                this.successCountField = value;
            }
        }
        
        /// <remarks/>
        public int FailedCount {
            get {
                return this.failedCountField;
            }
            set {
                this.failedCountField = value;
            }
        }
        
        /// <remarks/>
        public int RecCount {
            get {
                return this.recCountField;
            }
            set {
                this.recCountField = value;
            }
        }
        
        /// <remarks/>
        public bool FixTariff {
            get {
                return this.fixTariffField;
            }
            set {
                this.fixTariffField = value;
            }
        }
        
        /// <remarks/>
        public bool ExpireAlert {
            get {
                return this.expireAlertField;
            }
            set {
                this.expireAlertField = value;
            }
        }
        
        /// <remarks/>
        public bool CreditAlert {
            get {
                return this.creditAlertField;
            }
            set {
                this.creditAlertField = value;
            }
        }
        
        /// <remarks/>
        public bool UseBulkWebservice {
            get {
                return this.useBulkWebserviceField;
            }
            set {
                this.useBulkWebserviceField = value;
            }
        }
        
        /// <remarks/>
        public bool UseBulkCityWebService {
            get {
                return this.useBulkCityWebServiceField;
            }
            set {
                this.useBulkCityWebServiceField = value;
            }
        }
        
        /// <remarks/>
        public byte PaymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                this.paymentTypeField = value;
            }
        }
        
        /// <remarks/>
        public int MaxTicket {
            get {
                return this.maxTicketField;
            }
            set {
                this.maxTicketField = value;
            }
        }
        
        /// <remarks/>
        public int MaxOrderNumber {
            get {
                return this.maxOrderNumberField;
            }
            set {
                this.maxOrderNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool NeedBulkSubmition {
            get {
                return this.needBulkSubmitionField;
            }
            set {
                this.needBulkSubmitionField = value;
            }
        }
        
        /// <remarks/>
        public bool NeedPardisSubmition {
            get {
                return this.needPardisSubmitionField;
            }
            set {
                this.needPardisSubmitionField = value;
            }
        }
        
        /// <remarks/>
        public string NationalCode {
            get {
                return this.nationalCodeField;
            }
            set {
                this.nationalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FileAttached {
            get {
                return this.fileAttachedField;
            }
            set {
                this.fileAttachedField = value;
            }
        }
        
        /// <remarks/>
        public int HowFindUs {
            get {
                return this.howFindUsField;
            }
            set {
                this.howFindUsField = value;
            }
        }
        
        /// <remarks/>
        public int UseChargeCard {
            get {
                return this.useChargeCardField;
            }
            set {
                this.useChargeCardField = value;
            }
        }
        
        /// <remarks/>
        public int UseOffCode {
            get {
                return this.useOffCodeField;
            }
            set {
                this.useOffCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool AccessToBranchs {
            get {
                return this.accessToBranchsField;
            }
            set {
                this.accessToBranchsField = value;
            }
        }
        
        /// <remarks/>
        public bool BulkReport {
            get {
                return this.bulkReportField;
            }
            set {
                this.bulkReportField = value;
            }
        }
        
        /// <remarks/>
        public bool EnableDelivery {
            get {
                return this.enableDeliveryField;
            }
            set {
                this.enableDeliveryField = value;
            }
        }
        
        /// <remarks/>
        public int NumberPrice {
            get {
                return this.numberPriceField;
            }
            set {
                this.numberPriceField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CertificateNumber {
            get {
                return this.certificateNumberField;
            }
            set {
                this.certificateNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOnline {
            get {
                return this.isOnlineField;
            }
            set {
                this.isOnlineField = value;
            }
        }
        
        /// <remarks/>
        public string UnFilterKeywords {
            get {
                return this.unFilterKeywordsField;
            }
            set {
                this.unFilterKeywordsField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowSubreseller {
            get {
                return this.allowSubresellerField;
            }
            set {
                this.allowSubresellerField = value;
            }
        }
        
        /// <remarks/>
        public string FourDigitPwd {
            get {
                return this.fourDigitPwdField;
            }
            set {
                this.fourDigitPwdField = value;
            }
        }
        
        /// <remarks/>
        public bool HasContract {
            get {
                return this.hasContractField;
            }
            set {
                this.hasContractField = value;
            }
        }
        
        /// <remarks/>
        public byte MoneyBackDelivery {
            get {
                return this.moneyBackDeliveryField;
            }
            set {
                this.moneyBackDeliveryField = value;
            }
        }
        
        /// <remarks/>
        public string Infractions {
            get {
                return this.infractionsField;
            }
            set {
                this.infractionsField = value;
            }
        }
        
        /// <remarks/>
        public string AllowedIP {
            get {
                return this.allowedIPField;
            }
            set {
                this.allowedIPField = value;
            }
        }
        
        /// <remarks/>
        public bool SendEntryAlert {
            get {
                return this.sendEntryAlertField;
            }
            set {
                this.sendEntryAlertField = value;
            }
        }
        
        /// <remarks/>
        public string AllowedTimes {
            get {
                return this.allowedTimesField;
            }
            set {
                this.allowedTimesField = value;
            }
        }
        
        /// <remarks/>
        public string ReferrerWebSite {
            get {
                return this.referrerWebSiteField;
            }
            set {
                this.referrerWebSiteField = value;
            }
        }
        
        /// <remarks/>
        public string CommercialCode {
            get {
                return this.commercialCodeField;
            }
            set {
                this.commercialCodeField = value;
            }
        }
        
        /// <remarks/>
        public int RecommandUserId {
            get {
                return this.recommandUserIdField;
            }
            set {
                this.recommandUserIdField = value;
            }
        }
        
        /// <remarks/>
        public bool UseModulesForFree {
            get {
                return this.useModulesForFreeField;
            }
            set {
                this.useModulesForFreeField = value;
            }
        }
        
        /// <remarks/>
        public bool HasBeenChanged {
            get {
                return this.hasBeenChangedField;
            }
            set {
                this.hasBeenChangedField = value;
            }
        }
        
        /// <remarks/>
        public double Wallet {
            get {
                return this.walletField;
            }
            set {
                this.walletField = value;
            }
        }
        
        /// <remarks/>
        public int WebserviceCallCount {
            get {
                return this.webserviceCallCountField;
            }
            set {
                this.webserviceCallCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ActivationDate {
            get {
                return this.activationDateField;
            }
            set {
                this.activationDateField = value;
            }
        }
        
        /// <remarks/>
        public byte VipLevel {
            get {
                return this.vipLevelField;
            }
            set {
                this.vipLevelField = value;
            }
        }
        
        /// <remarks/>
        public string UserBehavior {
            get {
                return this.userBehaviorField;
            }
            set {
                this.userBehaviorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> BirthDate {
            get {
                return this.birthDateField;
            }
            set {
                this.birthDateField = value;
            }
        }
        
        /// <remarks/>
        public int ResellerPrice {
            get {
                return this.resellerPriceField;
            }
            set {
                this.resellerPriceField = value;
            }
        }
        
        /// <remarks/>
        public bool UseRevival {
            get {
                return this.useRevivalField;
            }
            set {
                this.useRevivalField = value;
            }
        }
        
        /// <remarks/>
        public double RevivalPrice {
            get {
                return this.revivalPriceField;
            }
            set {
                this.revivalPriceField = value;
            }
        }
        
        /// <remarks/>
        public double InstallMentPrice {
            get {
                return this.installMentPriceField;
            }
            set {
                this.installMentPriceField = value;
            }
        }
        
        /// <remarks/>
        public int InstallMent {
            get {
                return this.installMentField;
            }
            set {
                this.installMentField = value;
            }
        }
        
        /// <remarks/>
        public bool isRevival {
            get {
                return this.isRevivalField;
            }
            set {
                this.isRevivalField = value;
            }
        }
        
        /// <remarks/>
        public int RevivalDiscount {
            get {
                return this.revivalDiscountField;
            }
            set {
                this.revivalDiscountField = value;
            }
        }
        
        /// <remarks/>
        public double FirstPrice {
            get {
                return this.firstPriceField;
            }
            set {
                this.firstPriceField = value;
            }
        }
        
        /// <remarks/>
        public bool TestPanel {
            get {
                return this.testPanelField;
            }
            set {
                this.testPanelField = value;
            }
        }
        
        /// <remarks/>
        public bool IsInstallMent {
            get {
                return this.isInstallMentField;
            }
            set {
                this.isInstallMentField = value;
            }
        }
        
        /// <remarks/>
        public bool IsLagal {
            get {
                return this.isLagalField;
            }
            set {
                this.isLagalField = value;
            }
        }
        
        /// <remarks/>
        public bool FirstContract {
            get {
                return this.firstContractField;
            }
            set {
                this.firstContractField = value;
            }
        }
        
        /// <remarks/>
        public byte CrmCallType {
            get {
                return this.crmCallTypeField;
            }
            set {
                this.crmCallTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CrmCallTime {
            get {
                return this.crmCallTimeField;
            }
            set {
                this.crmCallTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool UserProject {
            get {
                return this.userProjectField;
            }
            set {
                this.userProjectField = value;
            }
        }
        
        /// <remarks/>
        public bool AccessToCRM {
            get {
                return this.accessToCRMField;
            }
            set {
                this.accessToCRMField = value;
            }
        }
        
        /// <remarks/>
        public bool IsTestCRM {
            get {
                return this.isTestCRMField;
            }
            set {
                this.isTestCRMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ExpDateCRM {
            get {
                return this.expDateCRMField;
            }
            set {
                this.expDateCRMField = value;
            }
        }
        
        /// <remarks/>
        public bool ActivatePanel {
            get {
                return this.activatePanelField;
            }
            set {
                this.activatePanelField = value;
            }
        }
        
        /// <remarks/>
        public int CrmProductID {
            get {
                return this.crmProductIDField;
            }
            set {
                this.crmProductIDField = value;
            }
        }
        
        /// <remarks/>
        public int CenterID {
            get {
                return this.centerIDField;
            }
            set {
                this.centerIDField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowSubResellerCRM {
            get {
                return this.allowSubResellerCRMField;
            }
            set {
                this.allowSubResellerCRMField = value;
            }
        }
        
        /// <remarks/>
        public bool UnOfficialPayment {
            get {
                return this.unOfficialPaymentField;
            }
            set {
                this.unOfficialPaymentField = value;
            }
        }
        
        /// <remarks/>
        public string RecommandUsID {
            get {
                return this.recommandUsIDField;
            }
            set {
                this.recommandUsIDField = value;
            }
        }
        
        /// <remarks/>
        public byte Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> MinCreditLowAlert {
            get {
                return this.minCreditLowAlertField;
            }
            set {
                this.minCreditLowAlertField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowUseShareNumberAPI {
            get {
                return this.allowUseShareNumberAPIField;
            }
            set {
                this.allowUseShareNumberAPIField = value;
            }
        }
        
        /// <remarks/>
        public string FatherName {
            get {
                return this.fatherNameField;
            }
            set {
                this.fatherNameField = value;
            }
        }
        
        /// <remarks/>
        public int BirthPlace {
            get {
                return this.birthPlaceField;
            }
            set {
                this.birthPlaceField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyNationalID {
            get {
                return this.companyNationalIDField;
            }
            set {
                this.companyNationalIDField = value;
            }
        }
        
        /// <remarks/>
        public string VerificationCode {
            get {
                return this.verificationCodeField;
            }
            set {
                this.verificationCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool AllowOtp {
            get {
                return this.allowOtpField;
            }
            set {
                this.allowOtpField = value;
            }
        }
        
        /// <remarks/>
        public string SmsVerificationCode {
            get {
                return this.smsVerificationCodeField;
            }
            set {
                this.smsVerificationCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> VerificationExpireDate {
            get {
                return this.verificationExpireDateField;
            }
            set {
                this.verificationExpireDateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMobileVerified {
            get {
                return this.isMobileVerifiedField;
            }
            set {
                this.isMobileVerifiedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> ApiKey {
            get {
                return this.apiKeyField;
            }
            set {
                this.apiKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> PasswordIsWeak {
            get {
                return this.passwordIsWeakField;
            }
            set {
                this.passwordIsWeakField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CredistGridList))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CreditsBL : BaseBL {
        
        private int creditIDField;
        
        private int tariffIdField;
        
        private int userIDField;
        
        private byte creditTypeField;
        
        private double creditAmountField;
        
        private double creditRemainField;
        
        private System.DateTime transactDateField;
        
        private string descriptionField;
        
        private byte payTypeField;
        
        private byte payLocField;
        
        private int linkIDField;
        
        private int sendCodeField;
        
        /// <remarks/>
        public int CreditID {
            get {
                return this.creditIDField;
            }
            set {
                this.creditIDField = value;
            }
        }
        
        /// <remarks/>
        public int TariffId {
            get {
                return this.tariffIdField;
            }
            set {
                this.tariffIdField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public byte CreditType {
            get {
                return this.creditTypeField;
            }
            set {
                this.creditTypeField = value;
            }
        }
        
        /// <remarks/>
        public double CreditAmount {
            get {
                return this.creditAmountField;
            }
            set {
                this.creditAmountField = value;
            }
        }
        
        /// <remarks/>
        public double CreditRemain {
            get {
                return this.creditRemainField;
            }
            set {
                this.creditRemainField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TransactDate {
            get {
                return this.transactDateField;
            }
            set {
                this.transactDateField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public byte PayType {
            get {
                return this.payTypeField;
            }
            set {
                this.payTypeField = value;
            }
        }
        
        /// <remarks/>
        public byte PayLoc {
            get {
                return this.payLocField;
            }
            set {
                this.payLocField = value;
            }
        }
        
        /// <remarks/>
        public int LinkID {
            get {
                return this.linkIDField;
            }
            set {
                this.linkIDField = value;
            }
        }
        
        /// <remarks/>
        public int SendCode {
            get {
                return this.sendCodeField;
            }
            set {
                this.sendCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CredistGridList : CreditsBL {
        
        private string tariffNameField;
        
        /// <remarks/>
        public string TariffName {
            get {
                return this.tariffNameField;
            }
            set {
                this.tariffNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum CreditTypes {
        
        /// <remarks/>
        SendSMS,
        
        /// <remarks/>
        ReceiveSMS,
        
        /// <remarks/>
        ChargeAccount,
        
        /// <remarks/>
        MoneyBack,
        
        /// <remarks/>
        Gift,
        
        /// <remarks/>
        AddEmployee,
        
        /// <remarks/>
        ChargeEmployee,
        
        /// <remarks/>
        RemoveEmplooyee,
        
        /// <remarks/>
        Profit,
        
        /// <remarks/>
        BuyNumber,
        
        /// <remarks/>
        ChargeCard,
        
        /// <remarks/>
        SaleCard,
        
        /// <remarks/>
        BuyModule,
        
        /// <remarks/>
        SendFax,
        
        /// <remarks/>
        SendVoiceSMS,
        
        /// <remarks/>
        CallDivert,
        
        /// <remarks/>
        CallExtenstion,
        
        /// <remarks/>
        Voip,
        
        /// <remarks/>
        Discount,
        
        /// <remarks/>
        InstallMent,
        
        /// <remarks/>
        DecreaseCredit,
        
        /// <remarks/>
        TestCredit,
        
        /// <remarks/>
        USSD,
        
        /// <remarks/>
        BuyCreditCharge,
        
        /// <remarks/>
        RenewPanel,
        
        /// <remarks/>
        ChargeAccountWithProfit,
        
        /// <remarks/>
        MoneyBackInLine,
        
        /// <remarks/>
        Bts,
        
        /// <remarks/>
        All,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserCredit2CompletedEventHandler(object sender, GetUserCredit2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCredit2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCredit2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserBasePriceCompletedEventHandler(object sender, GetUserBasePriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserBasePriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserBasePriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserIsExistCompletedEventHandler(object sender, GetUserIsExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserIsExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserIsExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUserWithMobileNumberCompletedEventHandler(object sender, AddUserWithMobileNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserWithMobileNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserWithMobileNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUserWithMobileNumber2CompletedEventHandler(object sender, AddUserWithMobileNumber2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserWithMobileNumber2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserWithMobileNumber2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUserCompletedEventHandler(object sender, AddUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUserWithLocationCompletedEventHandler(object sender, AddUserWithLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserWithLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserWithLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUserCompleteCompletedEventHandler(object sender, AddUserCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChangeUserCreditBySeccondPassCompletedEventHandler(object sender, ChangeUserCreditBySeccondPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserCreditBySeccondPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserCreditBySeccondPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChangeUserCreditCompletedEventHandler(object sender, ChangeUserCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserWalletCompletedEventHandler(object sender, GetUserWalletCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserWalletCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserWalletCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserWalletTransactionCompletedEventHandler(object sender, GetUserWalletTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserWalletTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserWalletTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public WalletGridList[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((WalletGridList[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeductUserCreditCompletedEventHandler(object sender, DeductUserCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeductUserCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeductUserCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChangeUserCredit2CompletedEventHandler(object sender, ChangeUserCredit2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeUserCredit2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeUserCredit2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserTransactionsCompletedEventHandler(object sender, GetUserTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CredistGridList[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CredistGridList[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserDetailsCompletedEventHandler(object sender, GetUserDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserGridList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserGridList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserCreditCompletedEventHandler(object sender, GetUserCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveUserCompletedEventHandler(object sender, RemoveUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserNumbersCompletedEventHandler(object sender, GetUserNumbersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddPaymentCompletedEventHandler(object sender, AddPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void HasFilterCompletedEventHandler(object sender, HasFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUsersCompletedEventHandler(object sender, GetUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserGridList[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserGridList[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AuthenticateUserCompletedEventHandler(object sender, AuthenticateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetExpireDateCompletedEventHandler(object sender, GetExpireDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpireDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExpireDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetEnExpireDateCompletedEventHandler(object sender, GetEnExpireDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEnExpireDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEnExpireDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.DateTime Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetProvincesCompletedEventHandler(object sender, GetProvincesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProvincesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProvincesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Province[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Province[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCitiesCompletedEventHandler(object sender, GetCitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public City[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((City[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ForgotPasswordCompletedEventHandler(object sender, ForgotPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForgotPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForgotPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void AddUserWithUserNameAndPassCompletedEventHandler(object sender, AddUserWithUserNameAndPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserWithUserNameAndPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserWithUserNameAndPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RevivalUserCompletedEventHandler(object sender, RevivalUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RevivalUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RevivalUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserByUserIDCompletedEventHandler(object sender, GetUserByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UsersBL Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UsersBL)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUserCreditBySecondPassCompletedEventHandler(object sender, GetUserCreditBySecondPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCreditBySecondPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCreditBySecondPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591