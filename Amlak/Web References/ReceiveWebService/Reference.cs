//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Amlak.ReceiveWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ReceiveSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BaseBL))]
    public partial class Receive : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetInboxCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOutBoxCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesWithChangeIsReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeMessageIsReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesFilterByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersMessagesByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveMessages2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesReceptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesAfterIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagesAfterIDJsonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestReceiveMsgOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Receive() {
            this.Url = global::Amlak.Properties.Settings.Default.Amlak_ReceiveWebService_Receive;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetInboxCountCompletedEventHandler GetInboxCountCompleted;
        
        /// <remarks/>
        public event GetOutBoxCountCompletedEventHandler GetOutBoxCountCompleted;
        
        /// <remarks/>
        public event GetMessagesCompletedEventHandler GetMessagesCompleted;
        
        /// <remarks/>
        public event GetMessagesWithChangeIsReadCompletedEventHandler GetMessagesWithChangeIsReadCompleted;
        
        /// <remarks/>
        public event ChangeMessageIsReadCompletedEventHandler ChangeMessageIsReadCompleted;
        
        /// <remarks/>
        public event GetMessagesByDateCompletedEventHandler GetMessagesByDateCompleted;
        
        /// <remarks/>
        public event GetMessagesFilterByDateCompletedEventHandler GetMessagesFilterByDateCompleted;
        
        /// <remarks/>
        public event GetUsersMessagesByDateCompletedEventHandler GetUsersMessagesByDateCompleted;
        
        /// <remarks/>
        public event GetMessageStrCompletedEventHandler GetMessageStrCompleted;
        
        /// <remarks/>
        public event RemoveMessagesCompletedEventHandler RemoveMessagesCompleted;
        
        /// <remarks/>
        public event RemoveMessages2CompletedEventHandler RemoveMessages2Completed;
        
        /// <remarks/>
        public event GetMessagesReceptionsCompletedEventHandler GetMessagesReceptionsCompleted;
        
        /// <remarks/>
        public event GetMessagesAfterIDCompletedEventHandler GetMessagesAfterIDCompleted;
        
        /// <remarks/>
        public event GetMessagesAfterIDJsonCompletedEventHandler GetMessagesAfterIDJsonCompleted;
        
        /// <remarks/>
        public event GetLatestReceiveMsgCompletedEventHandler GetLatestReceiveMsgCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInboxCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetInboxCount(string username, string password, bool isRead) {
            object[] results = this.Invoke("GetInboxCount", new object[] {
                        username,
                        password,
                        isRead});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetInboxCountAsync(string username, string password, bool isRead) {
            this.GetInboxCountAsync(username, password, isRead, null);
        }
        
        /// <remarks/>
        public void GetInboxCountAsync(string username, string password, bool isRead, object userState) {
            if ((this.GetInboxCountOperationCompleted == null)) {
                this.GetInboxCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInboxCountOperationCompleted);
            }
            this.InvokeAsync("GetInboxCount", new object[] {
                        username,
                        password,
                        isRead}, this.GetInboxCountOperationCompleted, userState);
        }
        
        private void OnGetInboxCountOperationCompleted(object arg) {
            if ((this.GetInboxCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInboxCountCompleted(this, new GetInboxCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOutBoxCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOutBoxCount(string username, string password) {
            object[] results = this.Invoke("GetOutBoxCount", new object[] {
                        username,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOutBoxCountAsync(string username, string password) {
            this.GetOutBoxCountAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetOutBoxCountAsync(string username, string password, object userState) {
            if ((this.GetOutBoxCountOperationCompleted == null)) {
                this.GetOutBoxCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOutBoxCountOperationCompleted);
            }
            this.InvokeAsync("GetOutBoxCount", new object[] {
                        username,
                        password}, this.GetOutBoxCountOperationCompleted, userState);
        }
        
        private void OnGetOutBoxCountOperationCompleted(object arg) {
            if ((this.GetOutBoxCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOutBoxCountCompleted(this, new GetOutBoxCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessagesBL[] GetMessages(string username, string password, int location, string from, int index, int count) {
            object[] results = this.Invoke("GetMessages", new object[] {
                        username,
                        password,
                        location,
                        from,
                        index,
                        count});
            return ((MessagesBL[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesAsync(string username, string password, int location, string from, int index, int count) {
            this.GetMessagesAsync(username, password, location, from, index, count, null);
        }
        
        /// <remarks/>
        public void GetMessagesAsync(string username, string password, int location, string from, int index, int count, object userState) {
            if ((this.GetMessagesOperationCompleted == null)) {
                this.GetMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesOperationCompleted);
            }
            this.InvokeAsync("GetMessages", new object[] {
                        username,
                        password,
                        location,
                        from,
                        index,
                        count}, this.GetMessagesOperationCompleted, userState);
        }
        
        private void OnGetMessagesOperationCompleted(object arg) {
            if ((this.GetMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesCompleted(this, new GetMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessagesWithChangeIsRead", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessagesBL[] GetMessagesWithChangeIsRead(string username, string password, int location, string from, int index, int count, bool isRead, bool changeIsRead) {
            object[] results = this.Invoke("GetMessagesWithChangeIsRead", new object[] {
                        username,
                        password,
                        location,
                        from,
                        index,
                        count,
                        isRead,
                        changeIsRead});
            return ((MessagesBL[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesWithChangeIsReadAsync(string username, string password, int location, string from, int index, int count, bool isRead, bool changeIsRead) {
            this.GetMessagesWithChangeIsReadAsync(username, password, location, from, index, count, isRead, changeIsRead, null);
        }
        
        /// <remarks/>
        public void GetMessagesWithChangeIsReadAsync(string username, string password, int location, string from, int index, int count, bool isRead, bool changeIsRead, object userState) {
            if ((this.GetMessagesWithChangeIsReadOperationCompleted == null)) {
                this.GetMessagesWithChangeIsReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesWithChangeIsReadOperationCompleted);
            }
            this.InvokeAsync("GetMessagesWithChangeIsRead", new object[] {
                        username,
                        password,
                        location,
                        from,
                        index,
                        count,
                        isRead,
                        changeIsRead}, this.GetMessagesWithChangeIsReadOperationCompleted, userState);
        }
        
        private void OnGetMessagesWithChangeIsReadOperationCompleted(object arg) {
            if ((this.GetMessagesWithChangeIsReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesWithChangeIsReadCompleted(this, new GetMessagesWithChangeIsReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeMessageIsRead", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangeMessageIsRead(string username, string password, string msgIds) {
            object[] results = this.Invoke("ChangeMessageIsRead", new object[] {
                        username,
                        password,
                        msgIds});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeMessageIsReadAsync(string username, string password, string msgIds) {
            this.ChangeMessageIsReadAsync(username, password, msgIds, null);
        }
        
        /// <remarks/>
        public void ChangeMessageIsReadAsync(string username, string password, string msgIds, object userState) {
            if ((this.ChangeMessageIsReadOperationCompleted == null)) {
                this.ChangeMessageIsReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeMessageIsReadOperationCompleted);
            }
            this.InvokeAsync("ChangeMessageIsRead", new object[] {
                        username,
                        password,
                        msgIds}, this.ChangeMessageIsReadOperationCompleted, userState);
        }
        
        private void OnChangeMessageIsReadOperationCompleted(object arg) {
            if ((this.ChangeMessageIsReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeMessageIsReadCompleted(this, new ChangeMessageIsReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessagesByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessagesBL[] GetMessagesByDate(string username, string password, int location, string from, int index, int count, System.DateTime dateFrom, System.DateTime dateTo) {
            object[] results = this.Invoke("GetMessagesByDate", new object[] {
                        username,
                        password,
                        location,
                        from,
                        index,
                        count,
                        dateFrom,
                        dateTo});
            return ((MessagesBL[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesByDateAsync(string username, string password, int location, string from, int index, int count, System.DateTime dateFrom, System.DateTime dateTo) {
            this.GetMessagesByDateAsync(username, password, location, from, index, count, dateFrom, dateTo, null);
        }
        
        /// <remarks/>
        public void GetMessagesByDateAsync(string username, string password, int location, string from, int index, int count, System.DateTime dateFrom, System.DateTime dateTo, object userState) {
            if ((this.GetMessagesByDateOperationCompleted == null)) {
                this.GetMessagesByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesByDateOperationCompleted);
            }
            this.InvokeAsync("GetMessagesByDate", new object[] {
                        username,
                        password,
                        location,
                        from,
                        index,
                        count,
                        dateFrom,
                        dateTo}, this.GetMessagesByDateOperationCompleted, userState);
        }
        
        private void OnGetMessagesByDateOperationCompleted(object arg) {
            if ((this.GetMessagesByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesByDateCompleted(this, new GetMessagesByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessagesFilterByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessagesBL[] GetMessagesFilterByDate(string username, string password, int location, string from, int index, int count, System.DateTime dateFrom, System.DateTime dateTo, bool isRead) {
            object[] results = this.Invoke("GetMessagesFilterByDate", new object[] {
                        username,
                        password,
                        location,
                        from,
                        index,
                        count,
                        dateFrom,
                        dateTo,
                        isRead});
            return ((MessagesBL[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesFilterByDateAsync(string username, string password, int location, string from, int index, int count, System.DateTime dateFrom, System.DateTime dateTo, bool isRead) {
            this.GetMessagesFilterByDateAsync(username, password, location, from, index, count, dateFrom, dateTo, isRead, null);
        }
        
        /// <remarks/>
        public void GetMessagesFilterByDateAsync(string username, string password, int location, string from, int index, int count, System.DateTime dateFrom, System.DateTime dateTo, bool isRead, object userState) {
            if ((this.GetMessagesFilterByDateOperationCompleted == null)) {
                this.GetMessagesFilterByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesFilterByDateOperationCompleted);
            }
            this.InvokeAsync("GetMessagesFilterByDate", new object[] {
                        username,
                        password,
                        location,
                        from,
                        index,
                        count,
                        dateFrom,
                        dateTo,
                        isRead}, this.GetMessagesFilterByDateOperationCompleted, userState);
        }
        
        private void OnGetMessagesFilterByDateOperationCompleted(object arg) {
            if ((this.GetMessagesFilterByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesFilterByDateCompleted(this, new GetMessagesFilterByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsersMessagesByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessagesBL[] GetUsersMessagesByDate(string username, string password, int location, string from, int index, int count, System.DateTime dateFrom, System.DateTime dateTo) {
            object[] results = this.Invoke("GetUsersMessagesByDate", new object[] {
                        username,
                        password,
                        location,
                        from,
                        index,
                        count,
                        dateFrom,
                        dateTo});
            return ((MessagesBL[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersMessagesByDateAsync(string username, string password, int location, string from, int index, int count, System.DateTime dateFrom, System.DateTime dateTo) {
            this.GetUsersMessagesByDateAsync(username, password, location, from, index, count, dateFrom, dateTo, null);
        }
        
        /// <remarks/>
        public void GetUsersMessagesByDateAsync(string username, string password, int location, string from, int index, int count, System.DateTime dateFrom, System.DateTime dateTo, object userState) {
            if ((this.GetUsersMessagesByDateOperationCompleted == null)) {
                this.GetUsersMessagesByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersMessagesByDateOperationCompleted);
            }
            this.InvokeAsync("GetUsersMessagesByDate", new object[] {
                        username,
                        password,
                        location,
                        from,
                        index,
                        count,
                        dateFrom,
                        dateTo}, this.GetUsersMessagesByDateOperationCompleted, userState);
        }
        
        private void OnGetUsersMessagesByDateOperationCompleted(object arg) {
            if ((this.GetUsersMessagesByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersMessagesByDateCompleted(this, new GetUsersMessagesByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessageStr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMessageStr(string username, string password, int location, string from, int index, int count) {
            object[] results = this.Invoke("GetMessageStr", new object[] {
                        username,
                        password,
                        location,
                        from,
                        index,
                        count});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageStrAsync(string username, string password, int location, string from, int index, int count) {
            this.GetMessageStrAsync(username, password, location, from, index, count, null);
        }
        
        /// <remarks/>
        public void GetMessageStrAsync(string username, string password, int location, string from, int index, int count, object userState) {
            if ((this.GetMessageStrOperationCompleted == null)) {
                this.GetMessageStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageStrOperationCompleted);
            }
            this.InvokeAsync("GetMessageStr", new object[] {
                        username,
                        password,
                        location,
                        from,
                        index,
                        count}, this.GetMessageStrOperationCompleted, userState);
        }
        
        private void OnGetMessageStrOperationCompleted(object arg) {
            if ((this.GetMessageStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageStrCompleted(this, new GetMessageStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveMessages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemoveMessages(string username, string password, MessageLocation location, string msgIds) {
            object[] results = this.Invoke("RemoveMessages", new object[] {
                        username,
                        password,
                        location,
                        msgIds});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveMessagesAsync(string username, string password, MessageLocation location, string msgIds) {
            this.RemoveMessagesAsync(username, password, location, msgIds, null);
        }
        
        /// <remarks/>
        public void RemoveMessagesAsync(string username, string password, MessageLocation location, string msgIds, object userState) {
            if ((this.RemoveMessagesOperationCompleted == null)) {
                this.RemoveMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveMessagesOperationCompleted);
            }
            this.InvokeAsync("RemoveMessages", new object[] {
                        username,
                        password,
                        location,
                        msgIds}, this.RemoveMessagesOperationCompleted, userState);
        }
        
        private void OnRemoveMessagesOperationCompleted(object arg) {
            if ((this.RemoveMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveMessagesCompleted(this, new RemoveMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveMessages2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RemoveMessages2(string username, string password, int location, string msgIds) {
            object[] results = this.Invoke("RemoveMessages2", new object[] {
                        username,
                        password,
                        location,
                        msgIds});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveMessages2Async(string username, string password, int location, string msgIds) {
            this.RemoveMessages2Async(username, password, location, msgIds, null);
        }
        
        /// <remarks/>
        public void RemoveMessages2Async(string username, string password, int location, string msgIds, object userState) {
            if ((this.RemoveMessages2OperationCompleted == null)) {
                this.RemoveMessages2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveMessages2OperationCompleted);
            }
            this.InvokeAsync("RemoveMessages2", new object[] {
                        username,
                        password,
                        location,
                        msgIds}, this.RemoveMessages2OperationCompleted, userState);
        }
        
        private void OnRemoveMessages2OperationCompleted(object arg) {
            if ((this.RemoveMessages2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveMessages2Completed(this, new RemoveMessages2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessagesReceptions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MsgReceptions[] GetMessagesReceptions(string username, string password, int msgId, int fromRows) {
            object[] results = this.Invoke("GetMessagesReceptions", new object[] {
                        username,
                        password,
                        msgId,
                        fromRows});
            return ((MsgReceptions[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesReceptionsAsync(string username, string password, int msgId, int fromRows) {
            this.GetMessagesReceptionsAsync(username, password, msgId, fromRows, null);
        }
        
        /// <remarks/>
        public void GetMessagesReceptionsAsync(string username, string password, int msgId, int fromRows, object userState) {
            if ((this.GetMessagesReceptionsOperationCompleted == null)) {
                this.GetMessagesReceptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesReceptionsOperationCompleted);
            }
            this.InvokeAsync("GetMessagesReceptions", new object[] {
                        username,
                        password,
                        msgId,
                        fromRows}, this.GetMessagesReceptionsOperationCompleted, userState);
        }
        
        private void OnGetMessagesReceptionsOperationCompleted(object arg) {
            if ((this.GetMessagesReceptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesReceptionsCompleted(this, new GetMessagesReceptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessagesAfterID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessagesBL[] GetMessagesAfterID(string username, string password, int location, string from, int count, int msgId) {
            object[] results = this.Invoke("GetMessagesAfterID", new object[] {
                        username,
                        password,
                        location,
                        from,
                        count,
                        msgId});
            return ((MessagesBL[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesAfterIDAsync(string username, string password, int location, string from, int count, int msgId) {
            this.GetMessagesAfterIDAsync(username, password, location, from, count, msgId, null);
        }
        
        /// <remarks/>
        public void GetMessagesAfterIDAsync(string username, string password, int location, string from, int count, int msgId, object userState) {
            if ((this.GetMessagesAfterIDOperationCompleted == null)) {
                this.GetMessagesAfterIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesAfterIDOperationCompleted);
            }
            this.InvokeAsync("GetMessagesAfterID", new object[] {
                        username,
                        password,
                        location,
                        from,
                        count,
                        msgId}, this.GetMessagesAfterIDOperationCompleted, userState);
        }
        
        private void OnGetMessagesAfterIDOperationCompleted(object arg) {
            if ((this.GetMessagesAfterIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesAfterIDCompleted(this, new GetMessagesAfterIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessagesAfterIDJson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMessagesAfterIDJson(string username, string password, int location, string from, int count, int msgId) {
            object[] results = this.Invoke("GetMessagesAfterIDJson", new object[] {
                        username,
                        password,
                        location,
                        from,
                        count,
                        msgId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessagesAfterIDJsonAsync(string username, string password, int location, string from, int count, int msgId) {
            this.GetMessagesAfterIDJsonAsync(username, password, location, from, count, msgId, null);
        }
        
        /// <remarks/>
        public void GetMessagesAfterIDJsonAsync(string username, string password, int location, string from, int count, int msgId, object userState) {
            if ((this.GetMessagesAfterIDJsonOperationCompleted == null)) {
                this.GetMessagesAfterIDJsonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagesAfterIDJsonOperationCompleted);
            }
            this.InvokeAsync("GetMessagesAfterIDJson", new object[] {
                        username,
                        password,
                        location,
                        from,
                        count,
                        msgId}, this.GetMessagesAfterIDJsonOperationCompleted, userState);
        }
        
        private void OnGetMessagesAfterIDJsonOperationCompleted(object arg) {
            if ((this.GetMessagesAfterIDJsonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagesAfterIDJsonCompleted(this, new GetMessagesAfterIDJsonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestReceiveMsg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LatestMsgReport GetLatestReceiveMsg(string username, string password, string sender, string receiver) {
            object[] results = this.Invoke("GetLatestReceiveMsg", new object[] {
                        username,
                        password,
                        sender,
                        receiver});
            return ((LatestMsgReport)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestReceiveMsgAsync(string username, string password, string sender, string receiver) {
            this.GetLatestReceiveMsgAsync(username, password, sender, receiver, null);
        }
        
        /// <remarks/>
        public void GetLatestReceiveMsgAsync(string username, string password, string sender, string receiver, object userState) {
            if ((this.GetLatestReceiveMsgOperationCompleted == null)) {
                this.GetLatestReceiveMsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestReceiveMsgOperationCompleted);
            }
            this.InvokeAsync("GetLatestReceiveMsg", new object[] {
                        username,
                        password,
                        sender,
                        receiver}, this.GetLatestReceiveMsgOperationCompleted, userState);
        }
        
        private void OnGetLatestReceiveMsgOperationCompleted(object arg) {
            if ((this.GetLatestReceiveMsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestReceiveMsgCompleted(this, new GetLatestReceiveMsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MessagesBL : BaseBL {
        
        private long msgIDField;
        
        private int userIDField;
        
        private int linkIDField;
        
        private int numberIDField;
        
        private double tariffField;
        
        private byte msgTypeField;
        
        private string bodyField;
        
        private string udhField;
        
        private System.DateTime sendDateField;
        
        private string senderField;
        
        private string receiverField;
        
        private int firstLocationField;
        
        private int currentLocationField;
        
        private int partsField;
        
        private bool isFlashField;
        
        private bool isReadField;
        
        private bool isUnicodeField;
        
        private double creditField;
        
        private int moduleField;
        
        private int recCountField;
        
        private int recFailedField;
        
        private int recSuccessField;
        
        private bool isMoneyBackField;
        
        private int userStepedMasterField;
        
        private int userMasterField;
        
        private int moneyBackCountField;
        
        private int moneyBackLevelField;
        
        private System.Nullable<bool> autoSpeechTextField;
        
        private System.Nullable<int> shareServiceBodyIDField;
        
        private System.Nullable<int> irancellBackCountField;
        
        /// <remarks/>
        public long MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public int LinkID {
            get {
                return this.linkIDField;
            }
            set {
                this.linkIDField = value;
            }
        }
        
        /// <remarks/>
        public int NumberID {
            get {
                return this.numberIDField;
            }
            set {
                this.numberIDField = value;
            }
        }
        
        /// <remarks/>
        public double Tariff {
            get {
                return this.tariffField;
            }
            set {
                this.tariffField = value;
            }
        }
        
        /// <remarks/>
        public byte MsgType {
            get {
                return this.msgTypeField;
            }
            set {
                this.msgTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        public string Udh {
            get {
                return this.udhField;
            }
            set {
                this.udhField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SendDate {
            get {
                return this.sendDateField;
            }
            set {
                this.sendDateField = value;
            }
        }
        
        /// <remarks/>
        public string Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        public string Receiver {
            get {
                return this.receiverField;
            }
            set {
                this.receiverField = value;
            }
        }
        
        /// <remarks/>
        public int FirstLocation {
            get {
                return this.firstLocationField;
            }
            set {
                this.firstLocationField = value;
            }
        }
        
        /// <remarks/>
        public int CurrentLocation {
            get {
                return this.currentLocationField;
            }
            set {
                this.currentLocationField = value;
            }
        }
        
        /// <remarks/>
        public int Parts {
            get {
                return this.partsField;
            }
            set {
                this.partsField = value;
            }
        }
        
        /// <remarks/>
        public bool IsFlash {
            get {
                return this.isFlashField;
            }
            set {
                this.isFlashField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRead {
            get {
                return this.isReadField;
            }
            set {
                this.isReadField = value;
            }
        }
        
        /// <remarks/>
        public bool IsUnicode {
            get {
                return this.isUnicodeField;
            }
            set {
                this.isUnicodeField = value;
            }
        }
        
        /// <remarks/>
        public double Credit {
            get {
                return this.creditField;
            }
            set {
                this.creditField = value;
            }
        }
        
        /// <remarks/>
        public int Module {
            get {
                return this.moduleField;
            }
            set {
                this.moduleField = value;
            }
        }
        
        /// <remarks/>
        public int RecCount {
            get {
                return this.recCountField;
            }
            set {
                this.recCountField = value;
            }
        }
        
        /// <remarks/>
        public int RecFailed {
            get {
                return this.recFailedField;
            }
            set {
                this.recFailedField = value;
            }
        }
        
        /// <remarks/>
        public int RecSuccess {
            get {
                return this.recSuccessField;
            }
            set {
                this.recSuccessField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMoneyBack {
            get {
                return this.isMoneyBackField;
            }
            set {
                this.isMoneyBackField = value;
            }
        }
        
        /// <remarks/>
        public int UserStepedMaster {
            get {
                return this.userStepedMasterField;
            }
            set {
                this.userStepedMasterField = value;
            }
        }
        
        /// <remarks/>
        public int UserMaster {
            get {
                return this.userMasterField;
            }
            set {
                this.userMasterField = value;
            }
        }
        
        /// <remarks/>
        public int MoneyBackCount {
            get {
                return this.moneyBackCountField;
            }
            set {
                this.moneyBackCountField = value;
            }
        }
        
        /// <remarks/>
        public int MoneyBackLevel {
            get {
                return this.moneyBackLevelField;
            }
            set {
                this.moneyBackLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> AutoSpeechText {
            get {
                return this.autoSpeechTextField;
            }
            set {
                this.autoSpeechTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ShareServiceBodyID {
            get {
                return this.shareServiceBodyIDField;
            }
            set {
                this.shareServiceBodyIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IrancellBackCount {
            get {
                return this.irancellBackCountField;
            }
            set {
                this.irancellBackCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MessagesBL))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BaseBL {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LatestMsgReport {
        
        private long msgIDField;
        
        private string bodyField;
        
        private int partsField;
        
        private System.DateTime sendDateField;
        
        private string senderField;
        
        private string receiverField;
        
        /// <remarks/>
        public long MsgID {
            get {
                return this.msgIDField;
            }
            set {
                this.msgIDField = value;
            }
        }
        
        /// <remarks/>
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        public int Parts {
            get {
                return this.partsField;
            }
            set {
                this.partsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SendDate {
            get {
                return this.sendDateField;
            }
            set {
                this.sendDateField = value;
            }
        }
        
        /// <remarks/>
        public string Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        public string Receiver {
            get {
                return this.receiverField;
            }
            set {
                this.receiverField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MsgReceptions {
        
        private string recNumberField;
        
        private string sendDateField;
        
        private string recStatusField;
        
        private string deliveryStatusField;
        
        private string recIDField;
        
        /// <remarks/>
        public string RecNumber {
            get {
                return this.recNumberField;
            }
            set {
                this.recNumberField = value;
            }
        }
        
        /// <remarks/>
        public string SendDate {
            get {
                return this.sendDateField;
            }
            set {
                this.sendDateField = value;
            }
        }
        
        /// <remarks/>
        public string RecStatus {
            get {
                return this.recStatusField;
            }
            set {
                this.recStatusField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryStatus {
            get {
                return this.deliveryStatusField;
            }
            set {
                this.deliveryStatusField = value;
            }
        }
        
        /// <remarks/>
        public string RecID {
            get {
                return this.recIDField;
            }
            set {
                this.recIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum MessageLocation {
        
        /// <remarks/>
        Received,
        
        /// <remarks/>
        Sent,
        
        /// <remarks/>
        Removed,
        
        /// <remarks/>
        Deleted,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetInboxCountCompletedEventHandler(object sender, GetInboxCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInboxCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInboxCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetOutBoxCountCompletedEventHandler(object sender, GetOutBoxCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOutBoxCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOutBoxCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMessagesCompletedEventHandler(object sender, GetMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessagesBL[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessagesBL[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMessagesWithChangeIsReadCompletedEventHandler(object sender, GetMessagesWithChangeIsReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesWithChangeIsReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesWithChangeIsReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessagesBL[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessagesBL[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ChangeMessageIsReadCompletedEventHandler(object sender, ChangeMessageIsReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeMessageIsReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeMessageIsReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMessagesByDateCompletedEventHandler(object sender, GetMessagesByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessagesBL[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessagesBL[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMessagesFilterByDateCompletedEventHandler(object sender, GetMessagesFilterByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesFilterByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesFilterByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessagesBL[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessagesBL[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetUsersMessagesByDateCompletedEventHandler(object sender, GetUsersMessagesByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersMessagesByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersMessagesByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessagesBL[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessagesBL[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMessageStrCompletedEventHandler(object sender, GetMessageStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveMessagesCompletedEventHandler(object sender, RemoveMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RemoveMessages2CompletedEventHandler(object sender, RemoveMessages2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveMessages2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveMessages2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMessagesReceptionsCompletedEventHandler(object sender, GetMessagesReceptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesReceptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesReceptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MsgReceptions[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MsgReceptions[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMessagesAfterIDCompletedEventHandler(object sender, GetMessagesAfterIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesAfterIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesAfterIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessagesBL[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessagesBL[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetMessagesAfterIDJsonCompletedEventHandler(object sender, GetMessagesAfterIDJsonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessagesAfterIDJsonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessagesAfterIDJsonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetLatestReceiveMsgCompletedEventHandler(object sender, GetLatestReceiveMsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestReceiveMsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestReceiveMsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LatestMsgReport Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LatestMsgReport)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591